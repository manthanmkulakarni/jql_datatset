[
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe has been the source of several issues over the past thirty days.",
        "output": "creator = \"John Doe\" AND created >= -30d"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Identify the bugs attached to board 12 that have been labeled \"high priority\" and have been updated in the last 24 hours.",
        "output": "board = \"12\" AND issuetype = Bug AND priority = \"High\" AND updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar@cisco.com has been delivered a register of flaws related to project ACM.",
        "output": "project = \"ACM\" AND issuetype = \"Bug\" AND assignee = \"mkulakar@cisco.com\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to inspect the bugs that John Doe made.",
        "output": "issuetype = \"Bug\" AND reporter = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Put together a selection of bugs in board 13 that have been handled by the Scrum Team \"DevOps\" and are settled.",
        "output": "issuetype = \"Bug\" AND board = \"13\" AND \"Scrum Team\" = \"DevOps\" AND status = \"Resolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "There is no one to whom any tasks are assigned.",
        "output": "issuetype = \"Task\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "All stories should be labeled as \"done\" and displayed in a list.",
        "output": "issuetype = \"Story\" AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "List each bug assigned to mkulakar.",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need the bugs that are put on me.",
        "output": "issuetype = Bug AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team must pull up all issues with a \"Low\" priority.",
        "output": "\"Scrum Team\" = \"Testing\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieve all epics pertaining to the project \"Z-587AC\" that have not commenced yet.",
        "output": "project = \"Z-587AC\" AND issuetype = Epic AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to view the critical bugs in project ABC.",
        "output": "project = ABC AND issuetype = bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Design\" should present a list of all sub-tasks in the \"TA\" project",
        "output": "issuetype = Sub-task AND \"Scrum Team\" = \"Design\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Generate a list of topics that have a due date assigned.",
        "output": "duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please show me all the tasks which have been allocated to the Support Scrum Team on Board 16, and have a Low priority and an In Progress status.",
        "output": "board = \"16\" AND \"Scrum Team\" = \"Support\" AND priority = \"Low\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Search for any issues with the \"Frontend\" component and \"Low\" priority.",
        "output": "component = \"Frontend\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I am looking for a list of all the problems that have been attributed to me or logged by me.",
        "output": "reporter = currentUser() OR assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I am to view all the stories designated for me.",
        "output": "issuetype = \"Story\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I'm interested in the assignments that have missed their deadlines.",
        "output": "duedate < startOfDay() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Over the last 30 days, John Doe has provided a list of issues.",
        "output": "creator = \"John Doe\" AND created >= -30d"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you compile a list of all open bugs in project ABC?",
        "output": "project = ABC AND issuetype = bug AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "No tasks are assigned to any individual.",
        "output": "issuetype = \"Task\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Obtain the bugs that are assigned to me.",
        "output": "issuetype = Bug AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Tallying the open issues included in the \"ACM\" project is imperative.",
        "output": "project = \"ACM\" AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieve all the unresolved queries associated with the \"ZY\" project.",
        "output": "project = \"ZY\" AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "All bugs with \"High\" priority and \"To Do\" status in board 15 that are assigned to Mary Johnson have to be retrieved.",
        "output": "issuetype = Bug AND board = \"15\" AND assignee = \"Mary Johnson\" AND priority = \"High\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can I get the list of epics with a due date within seven days?",
        "output": "issuetype = Epic AND duedate <= endOfDay(\"+1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show the active assignments of John Doe.",
        "output": "assignee = \"John Doe\" AND issuetype = Task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I request to view all bugs on board 14 that have been assigned to me and have a priority of \"Medium\".",
        "output": "project = \"TA\" AND issuetype = \"Bug\" AND board = \"14\" AND assignee = currentUser() AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar@cisco.com has been presented a list of errors related to project ACM.",
        "output": "project = \"ACM\" AND issuetype = \"Bug\" AND assignee = \"mkulakar@cisco.com\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you list all the bugs that are open in project ABC?",
        "output": "project = ABC AND issuetype = bug AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "\"john.doe\" has reported some issues, all of which should have the",
        "output": "reporter = \"john.doe\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please give me a preview of the stories that are in progress.",
        "output": "issuetype = \"Story\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "In the last 30 days, John Doe has presented a list of issues.",
        "output": "creator = \"John Doe\" AND created >= -30d"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Form a catalogue of bugs with the priority of \"High\".",
        "output": "priority = \"High\" AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar has been tasked to detect all bugs in Board 12.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Search out any unsolved queries in the \"ZY\" project.",
        "output": "project = \"ZY\" AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieval of stories with the tag \"Feature\" and a status of \"To Do\" is requested.",
        "output": "issuetype = Story AND labels = \"Feature\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Tag any issues with \"urgent\" and give them to \"Jane Smith\".",
        "output": "labels = \"urgent\" AND assignee = \"Jane Smith\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "\"Medium\" is the priority given to the epics assigned to the Scrum Team \"Operations.\"",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Operations\" AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe has created bugs - I need to view them.",
        "output": "issuetype = \"Bug\" AND reporter = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar@cisco.com is to retrieve the list of bugs for the project \"Z-587AC\".",
        "output": "project = \"Z-587AC\" AND issuetype = Bug AND assignee = \"mkulakar@cisco.com\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is important for me to view the high-priority issues that have been assigned to me.",
        "output": "priority = High AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gather the list of bugs connected to the project \"Z-587AC\" for mkulakar@cisco.com.",
        "output": "project = \"Z-587AC\" AND issuetype = Bug AND assignee = \"mkulakar@cisco.com\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Give a compilation of issues that bear a set due date.",
        "output": "duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Finishing the list of stories, a \"done\" label has been added.",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Would you please display all open tasks?",
        "output": "issuetype = \"Task\" AND status != \"Closed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The team \"support\" must list all their issues in the present project.",
        "output": "team = \"support\" AND (fixVersion in unreleasedVersions() OR fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It's important to remember to write down the tasks assigned to me for the day.",
        "output": "duedate = startOfDay() AND assignee = currentUser() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "For the past day, display all the issues with their associated comments.",
        "output": "commentDate >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I'm looking for epics labeled \"Feature\".",
        "output": "issuetype = \"Epic\" AND labels = \"Feature\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The appropriate issues for a particular user with a label from project XYZ must be cataloged.",
        "output": "project = XYZ AND assignee = \"jane.smith\" AND labels = \"backend-bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The team \"support\" must not forget to list all the tasks allocated to them in the current project.",
        "output": "team = \"support\" AND (fixVersion in unreleasedVersions() OR fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Allow me to experience all epics.",
        "output": "issuetype = \"Epic\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Examine all the issues that have been brought up with remarks from the previous 24 hours.",
        "output": "commentDate >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What are the open tasks with due dates in the forthcoming 3 days?",
        "output": "issuetype = \"Task\" AND status != \"Closed\" AND duedate <= endOfDay(\"+3d\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Frontend\" need to list all sub-tasks in the \"TA\" project with a status of \"To Do\".",
        "output": "project = \"TA\" AND issuetype = \"Sub-task\" AND \"Scrum Team\" = \"Frontend\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring out all the bugs within board 12 that have been assigned with label \"high priority\" and have been updated recently.",
        "output": "board = \"12\" AND issuetype = Bug AND priority = \"High\" AND updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What tasks will the Scrum Team \"Testing\" have to do in the next week?",
        "output": "\"Scrum Team\" = \"Testing\" AND issuetype = Task AND duedate <= 1w"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A list of tasks assigned to the Scrum Team \"Design\" which are currently in the \"In Review\" status is available.",
        "output": "issuetype = \"Task\" AND \"Scrum Team\" = \"Design\" AND status = \"In Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show me, please, the bugs in board 12 that have been assigned to me.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is necessary to select all issues reported by \"john.doe\" that have the resolution \"Done\".",
        "output": "reporter = \"john.doe\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe has to complete all the tasks that are part of the \"Z-587AC\" project and are to be finished within the next three days.",
        "output": "project = \"Z-587AC\" AND issuetype = Task AND assignee = \"John Doe\" AND duedate <= 3d"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Find all the unresolved issues in the \"ZY\" project.",
        "output": "project = \"ZY\" AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Presenting a list of stories, labeled as \"done\".",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe should be shown all his active tasks.",
        "output": "assignee = \"John Doe\" AND issuetype = Task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Don't miss out on any unresolved issues reported this week.",
        "output": "created >= startOfWeek() AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Design\" has a list of tasks that they have been assigned and are currently in the \"In Review\" status.",
        "output": "issuetype = \"Task\" AND \"Scrum Team\" = \"Design\" AND status = \"In Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Attach a list of all the issues.",
        "output": "attachments is not empty"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Accumulate all the unresolved queries in the \"ZY\" project.",
        "output": "project = \"ZY\" AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please show me what tasks the Scrum Team \"Testing\" is expected to complete by the end of next week.",
        "output": "\"Scrum Team\" = \"Testing\" AND issuetype = Task AND duedate <= 1w"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to be informed of all critical bugs in project ABC.",
        "output": "project = ABC AND issuetype = bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need the bugs that are designated to me.",
        "output": "issuetype = Bug AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieve all the issues of the \"AE\" project having \"urgent\" tag and at the same time, in \"In Progress\" status.",
        "output": "project = \"ACM\" AND labels = \"urgent\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please display all the issues in Board 16 that are allocated to the Support Scrum Team, with a Low priority and In Progress status.",
        "output": "board = \"16\" AND \"Scrum Team\" = \"Support\" AND priority = \"Low\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Fetch all epics related to \"Z-587AC\" that have yet to be initiated.",
        "output": "project = \"Z-587AC\" AND issuetype = Epic AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Support\" needs a list of epics with a \"High\" Priority level.",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Support\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Do you have any epics labeled as \"Feature\"?",
        "output": "issuetype = \"Epic\" AND labels = \"Feature\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What are the open tasks?",
        "output": "issuetype = \"Task\" AND status != \"Closed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieving a collection of sub-tasks relevant to \"ACM-123\" issue key.",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "List out all the matters and their reviews from the last 24 hours.",
        "output": "commentDate >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project ABC requires you to look for issues with a specified fix version and status.",
        "output": "project = ABC AND fixVersion = \"4.0.0\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Identify all issues that have a custom field value of \"Custom Value\" and a due date of \"2023-11-30\".",
        "output": "cf[10029] = \"Custom Value\" AND due = \"2023-11-30\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project ABC helps to show all issues with a precise custom field value and reporter.",
        "output": "project = ABC AND cf[10007] = \"Custom Value\" AND reporter = \"john.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring to me all stories, under the project XYZ, with priority \"Medium\" and assigned to john.doe@example.com.",
        "output": "project = XYZ AND assignee = 'john.doe@example.com' AND issuetype = Story AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Unearth problems that include \"urgent\" in the description.",
        "output": "description ~ \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you show me the epics marked with \"Feature\"?",
        "output": "issuetype = \"Epic\" AND labels = \"Feature\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Extract the bugs marked as \"high priority\" belonging to board 12 and updated within 24 hours.",
        "output": "board = \"12\" AND issuetype = Bug AND priority = \"High\" AND updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring up all bugs apportioned to mkulakar.",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Forward a list of all the issues having attachments.",
        "output": "attachments is not empty"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "View all the problems that have been identified along with the accompanying comments from the past day.",
        "output": "commentDate >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Obtain any matters attributed to users in the \"Development\" Scrum Team.",
        "output": "\"Scrum Team\" = \"Development\" AND assignee != null"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A list of bugs should be identified with a \"High\" priority.",
        "output": "issuetype = \"Bug\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "For the Scrum Team \"Frontend\", list all epics that have a priority of \"High\".",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Frontend\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring out all the tasks that were allocated to John Doe that has a priority of \"Low\" in board 8.",
        "output": "project = \"TA\" AND issuetype = \"Task\" AND board = \"8\" AND assignee = \"John Doe\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The label \"done\" should be associated with the stories that are listed.",
        "output": "issuetype = \"Story\" AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is necessary to exhibit all the concluded issues.",
        "output": "resolution is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to view the bugs assigned to mkulakar, if you don't mind.",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is my job to view all the stories attributed to me.",
        "output": "issuetype = \"Story\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Indicate all bugs related to mkulakar.",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar has been assigned a number of bugs; could you show me all of them?",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gather up troubles that have \"urgent\" in the description.",
        "output": "description ~ \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Obtain a list of problems in board 12 having the tag \"urgent\" and allocating to the Scrum Team \"Development\".",
        "output": "board = \"12\" AND labels = \"urgent\" AND \"Scrum Team\" = \"Development\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Highlight objectives that have been set as blocked.",
        "output": "issuetype = Task AND status = Blocked"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar@cisco.com needs to get the list of bugs corresponding to the project \"Z-587AC\".",
        "output": "project = \"Z-587AC\" AND issuetype = Bug AND assignee = \"mkulakar@cisco.com\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The stories associated with John Doe should be displayed.",
        "output": "issuetype = \"Story\" AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Is there a compilation of the bugs that have been created during the last week?",
        "output": "issuetype = \"Bug\" AND created >= startOfWeek(\"-1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Do you know all the open bugs for project ABC?",
        "output": "project = ABC AND issuetype = bug AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Display to me the fables that are set as \"ready for review\".",
        "output": "issuetype = \"Story\" AND \"Review Status\" = \"Ready for Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Would you be able to provide a list of the bugs identified in the last seven days?",
        "output": "issuetype = \"Bug\" AND created >= startOfWeek(\"-1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please show me all sub-tasks for the epic with key \"ACM-123\" that are in \"in progress\" status.",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task AND status = \"in progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "To access a list of sub-tasks related to \"ACM-123\" issue key.",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please bring me the bugs that are attributed to me.",
        "output": "issuetype = Bug AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The team \"support\" has the duty to enumerate all their issues in the current project.",
        "output": "team = \"support\" AND (fixVersion in unreleasedVersions() OR fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Reveal all questions which possess attachments and are not delegated to any individual.",
        "output": "attachments is not EMPTY AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is necessary for project XYZ to show all the issues with a particular custom field value and priority.",
        "output": "project = XYZ AND cf[10008] = \"Custom Value\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Formulate a register of bugs having \"High\" priority.",
        "output": "priority = \"High\" AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I wish to view the epics allocated to the Scrum Team \"Operations\" which have the priority of \"Medium\".",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Operations\" AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please illustrate the stories that are ongoing in the \"ZY\" project.",
        "output": "project = \"ZY\" AND issuetype = Story AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The list of bugs should be labeled with a \"High\" priority.",
        "output": "issuetype = \"Bug\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Would you show me the tasks that have not been finished on time?",
        "output": "duedate < startOfDay() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "All the solved difficulties should be showcased.",
        "output": "resolution is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I want the bugs that are yielded to me.",
        "output": "issuetype = Bug AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Assemble all the bugs that have been given a critical designation.",
        "output": "issuetype = Bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe has compiled a list of issues brought up in the past month.",
        "output": "creator = \"John Doe\" AND created >= -30d"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The list of bugs in board 17 assigned to the Scrum Team \"Security\" must have a priority of \"Medium\" and a status of \"In Progress\".",
        "output": "issuetype = Bug AND board = \"17\" AND \"Scrum Team\" = \"Security\" AND priority = \"Medium\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar must deliver a report of all bugs present in Board 12.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Design\" has to review a list of tasks that have been assigned to them.",
        "output": "issuetype = \"Task\" AND \"Scrum Team\" = \"Design\" AND status = \"In Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring about a listing of bugs in board 13 addressed by the Scrum Team \"DevOps\" and have been taken care of.",
        "output": "issuetype = \"Bug\" AND board = \"13\" AND \"Scrum Team\" = \"DevOps\" AND status = \"Resolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"Frontend\" Scrum Team need to make a list of sub-tasks in the \"TA\" project which have the status of \"To Do\".",
        "output": "project = \"TA\" AND issuetype = \"Sub-task\" AND \"Scrum Team\" = \"Frontend\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can I view all of the bugs that have been assigned to me with a priority of \"Medium\" on board 14?",
        "output": "project = \"TA\" AND issuetype = \"Bug\" AND board = \"14\" AND assignee = currentUser() AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Illustrate duties that have been classified as blocked.",
        "output": "issuetype = Task AND status = Blocked"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to view the open tasks with due dates in the upcoming 3 days.",
        "output": "issuetype = \"Task\" AND status != \"Closed\" AND duedate <= endOfDay(\"+3d\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Testing\" is accountable for resolving the issues with \"Unresolved\" resolution.",
        "output": "\"Scrum Team\" = \"Testing\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you give me a list of the critical bugs in project ABC?",
        "output": "project = ABC AND issuetype = bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"Z-587AC\" project necessitates a compilation of tasks with a given due date.",
        "output": "project = \"Z-587AC\" AND issuetype = \"Task\" AND duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"Development\" Scrum Team has to list out the bugs that are in the \"In Progress\" status.",
        "output": "issuetype = \"Bug\" AND \"Scrum Team\" = \"Development\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is crucial to display all the settled problems.",
        "output": "resolution is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Collect all the unresolved queries in the \"ZY\" project.",
        "output": "project = \"ZY\" AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show me the list of bugs that are assigned to me.",
        "output": "assignee = currentUser() AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"Development\" Scrum Team has been assigned to show a list of bugs in the \"In Progress\" state.",
        "output": "issuetype = \"Bug\" AND \"Scrum Team\" = \"Development\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gather all tasks designated to people in the \"Development\" Scrum Team.",
        "output": "\"Scrum Team\" = \"Development\" AND assignee != null"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I request to see all epics.",
        "output": "issuetype = \"Epic\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Board 12 needs to be inspected for any bugs assigned to mkulakar.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What are the stories that are in process for the \"ZY\" project at the moment?",
        "output": "project = \"ZY\" AND issuetype = Story AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Produce a tabulation of issues that have a due date specified.",
        "output": "duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Fetch all the \"AE\" project's tasks with \"urgent\" label which are in the \"In Progress\" status.",
        "output": "project = \"ACM\" AND labels = \"urgent\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is essential to provide a list of bugs with a priority of \"High\".",
        "output": "issuetype = \"Bug\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Would you be able to provide me with the stories that are still in progress in the \"ZY\" project?",
        "output": "project = \"ZY\" AND issuetype = Story AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Obtaining a set of sub-tasks related to \"ACM-123\" issue key.",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you show me epics classified as \"Feature\"?",
        "output": "issuetype = \"Epic\" AND labels = \"Feature\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Kindly show me the epics assigned to the Scrum Team \"Operations\" that have a priority level of \"Medium\".",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Operations\" AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Reveal all the bugs.",
        "output": "issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need a compilation of every bug that has come up in the last week.",
        "output": "issuetype = \"Bug\" AND created >= startOfWeek(\"-1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The selection of the issues with issue type \"Bug\" and assignee \"jane.doe\" should be done.",
        "output": "issuetype = \"Bug\" AND assignee = \"jane.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A list of stories which have been labeled \"done\" must be shown.",
        "output": "issuetype = \"Story\" AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Label all issues as \"urgent\" and assign them to the user \"Jane Smith\"",
        "output": "labels = \"urgent\" AND assignee = \"Jane Smith\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gather a list of bugs in board 13 that are assigned to the Scrum Team \"DevOps\" and have been resolved.",
        "output": "issuetype = \"Bug\" AND board = \"13\" AND \"Scrum Team\" = \"DevOps\" AND status = \"Resolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is important to recognize all the issues that have been resolved.",
        "output": "resolution is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "List all the issues a team has.",
        "output": "(team = ateam or team = dreamteam or team = engineroom) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you please show me the open tasks with due dates in the next 3 days?",
        "output": "issuetype = \"Task\" AND status != \"Closed\" AND duedate <= endOfDay(\"+3d\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Testing\" is obligated to look for issues with a \"Low\" priority.",
        "output": "\"Scrum Team\" = \"Testing\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I require that you display all the high-priority epics in the \"ACM\" project.",
        "output": "project = \"ZY\" AND issuetype = \"Epic\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Find the problems that you would like to focus on.",
        "output": "(assignee = currentUser() or reporter = currentUser()) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is requested to show me the epics assigned to the Scrum Team \"Operations\" that have a priority of \"Medium\".",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Operations\" AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It would be great to be able to review the critical bugs in project ABC.",
        "output": "project = ABC AND issuetype = bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can I get a compilation of the bugs assigned to me that are marked as \"critical\"?",
        "output": "assignee = currentUser() AND issuetype = \"Bug\" AND labels = \"critical\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Make sure you take into account all the issues that have been reported but not yet resolved this week.",
        "output": "created >= startOfWeek() AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Direct my attention to the dramas that are qualified as \"ready for review\".",
        "output": "issuetype = \"Story\" AND \"Review Status\" = \"Ready for Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Could I get a list of the bugs that are associated with me and labeled as \"critical\"?",
        "output": "assignee = currentUser() AND issuetype = \"Bug\" AND labels = \"critical\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "When addressing issues in Project ABC, a parent epic and resolution should always be included.",
        "output": "project = ABC AND \"Epic Link\" = \"EPIC-123\" AND resolution = \"Fixed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "For any issues in Project ABC, a parent epic and resolution must be specified.",
        "output": "project = ABC AND \"Epic Link\" = \"EPIC-123\" AND resolution = \"Fixed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What troubles have been identified in the \"customer\" module?",
        "output": "module = \"customer\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "This week, make sure to look at all unresolved issues that have been reported.",
        "output": "created >= startOfWeek() AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "For project ABC, opt for all issues with a definite fix version and status.",
        "output": "project = ABC AND fixVersion = \"4.0.0\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Expose the issues which come with attachments and don\u2019t have any assignee.",
        "output": "attachments is not EMPTY AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Select all \"urgent\" issues and give them to \"Jane Smith\".",
        "output": "labels = \"urgent\" AND assignee = \"Jane Smith\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you provide me with the open tasks with due dates in the next 3 days?",
        "output": "issuetype = \"Task\" AND status != \"Closed\" AND duedate <= endOfDay(\"+3d\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Permit me to view all epics.",
        "output": "issuetype = \"Epic\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please present me with the jobs that are past the due date.",
        "output": "duedate < startOfDay() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I should list the tasks due today that I have been assigned.",
        "output": "duedate = startOfDay() AND assignee = currentUser() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can I get a list of all the issues attributed to myself or reported by me?",
        "output": "reporter = currentUser() OR assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "See all the troubles that have been reported with opinions in the previous day.",
        "output": "commentDate >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The label \"done\" is given to the stories here.",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Selecting the issues with issue type \"Bug\" and assignee \"jane.doe\" is a must.",
        "output": "issuetype = \"Bug\" AND assignee = \"jane.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "One must make a list of all open issues in the \"ACM\" project.",
        "output": "project = \"ACM\" AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The user \"john.doe\" has reported issues, and they all need to be marked with the resolution \"Done\".",
        "output": "reporter = \"john.doe\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Itemizing all open issues relating to the \"ACM\" project is essential.",
        "output": "project = \"ACM\" AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Obtain an inventory of difficulties in board 12 with the tag \"urgent\" and are given to the Scrum Team \"Development\".",
        "output": "board = \"12\" AND labels = \"urgent\" AND \"Scrum Team\" = \"Development\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Issues connected to Project ABC must have an assigned parent epic and resolution.",
        "output": "project = ABC AND \"Epic Link\" = \"EPIC-123\" AND resolution = \"Fixed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to know what the open tasks are.",
        "output": "issuetype = \"Task\" AND status != \"Closed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "There are no tasks that have been assigned to anyone.",
        "output": "issuetype = \"Task\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is necessary to list all of the issues that are associated with a particular user and have the label from project XYZ.",
        "output": "project = XYZ AND assignee = \"jane.smith\" AND labels = \"backend-bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe has ended up with active tasks.",
        "output": "assignee = \"John Doe\" AND issuetype = Task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Generate a list of bugs that have been assigned the label \"high priority\" in board 12 and updated within the last 24 hours.",
        "output": "board = \"12\" AND issuetype = Bug AND priority = \"High\" AND updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "There is a compilation of unresolved issues that were assigned to the Scrum Team \"Testing\".",
        "output": "\"Scrum Team\" = \"Testing\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show me the bugs assigned to me now.",
        "output": "assignee = currentUser() AND issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to know the high-priority epics in the \"ACM\" project.",
        "output": "project = \"ZY\" AND issuetype = \"Epic\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieve any tasks that have been allocated to participants in the \"Development\" Scrum Team.",
        "output": "\"Scrum Team\" = \"Development\" AND assignee != null"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Find all problems with the component \"Frontend\" which are labelled \"Low\" priority.",
        "output": "component = \"Frontend\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Mary Johnson needs to take care of all the bugs in board 15 with \"High\" priority and \"To Do\" status.",
        "output": "issuetype = Bug AND board = \"15\" AND assignee = \"Mary Johnson\" AND priority = \"High\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieve the list of bugs pertaining to project \"Z-587AC\" designated to mkulakar@cisco.com.",
        "output": "project = \"Z-587AC\" AND issuetype = Bug AND assignee = \"mkulakar@cisco.com\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Display the entries in Board 16 that have been assigned to the Support Scrum Team, with Low priority and In Progress status.",
        "output": "board = \"16\" AND \"Scrum Team\" = \"Support\" AND priority = \"Low\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The priority of the list of bugs should be designated as \"High\".",
        "output": "issuetype = \"Bug\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "When dealing with issues in Project ABC, it is a must to provide a related epic and resolution.",
        "output": "project = ABC AND \"Epic Link\" = \"EPIC-123\" AND resolution = \"Fixed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Acquire all the tasks specified to John Doe in board 8 with a priority of \"Low\".",
        "output": "project = \"TA\" AND issuetype = \"Task\" AND board = \"8\" AND assignee = \"John Doe\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Could you provide me with a list of bugs that have been rated \"critical\" and assigned to me?",
        "output": "assignee = currentUser() AND issuetype = \"Bug\" AND labels = \"critical\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Collect all the problems a team is dealing with.",
        "output": "(team = ateam or team = dreamteam or team = engineroom) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Inspect all the issues that have been discussed with comments within the last 24 hours.",
        "output": "commentDate >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project XYZ is required to display the issues with a given custom field value and priority.",
        "output": "project = XYZ AND cf[10008] = \"Custom Value\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Testing\" is required to work on a list of issues with \"Unresolved\" resolution.",
        "output": "\"Scrum Team\" = \"Testing\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "An overview of what has been modified in the past 24 hours was presented.",
        "output": "updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I am in charge of surveying the high-priority issues allocated to me.",
        "output": "priority = High AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "For the user \"john.doe\" select all the issues that have been resolved as \"Done\".",
        "output": "reporter = \"john.doe\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Send a list of all issues that have attachments.",
        "output": "attachments is not empty"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "List down all the issues that are associated with attachments.",
        "output": "attachments is not empty"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you provide a list of open bugs associated with project ABC?",
        "output": "project = ABC AND issuetype = bug AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present a list of all the issues and the attachments to them.",
        "output": "attachments is not empty"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "For project ABC, one can view all the issues having a specified custom field value and reporter.",
        "output": "project = ABC AND cf[10007] = \"Custom Value\" AND reporter = \"john.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show me the tasks that have not been finished before the deadline.",
        "output": "duedate < startOfDay() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project XYZ has a clear label system for certain user assignments, and these issues can be listed.",
        "output": "project = XYZ AND assignee = \"jane.smith\" AND labels = \"backend-bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Check the list of unaccomplished duties in project XYZ.",
        "output": "project = XYZ AND issuetype = task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Demonstrate all bugs allocated to mkulakar.",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Provide me with all stories, under project XYZ, with priority \"Medium\" and assigned",
        "output": "project = XYZ AND assignee = 'john.doe@example.com' AND issuetype = Story AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"product\" team is being asked to list all feature requests assigned to them for project XYZ.",
        "output": "project = XYZ AND issuetype = \"feature request\" AND team = \"product\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Mark the to-do list of project XYZ.",
        "output": "project = XYZ AND issuetype = task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Support\" should be given a list of epics that possess a priority level of \"High\".",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Support\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Let me see all the bugs that I'm responsible for.",
        "output": "assignee = currentUser() AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Compile a record of bugs on board 13 allocated to the Scrum Team \"DevOps\" which have been tackled.",
        "output": "issuetype = \"Bug\" AND board = \"13\" AND \"Scrum Team\" = \"DevOps\" AND status = \"Resolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar@cisco.com can obtain the list of bugs associated to the project \"Z-587AC\".",
        "output": "project = \"Z-587AC\" AND issuetype = Bug AND assignee = \"mkulakar@cisco.com\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The team \"support\" must compile a list of all the issues they are responsible for in the current project.",
        "output": "team = \"support\" AND (fixVersion in unreleasedVersions() OR fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Organize the bugs that are identified as critical.",
        "output": "issuetype = Bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "All the bugs assigned to Mary Johnson in board 15 that have the priority of \"High\" and the status of \"To Do\" should be retrieved.",
        "output": "issuetype = Bug AND board = \"15\" AND assignee = \"Mary Johnson\" AND priority = \"High\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Could you reveal the stories that are in progress?",
        "output": "issuetype = \"Story\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you demonstrate the narratives that are in the middle of being worked on in the \"ZY\" project?",
        "output": "project = \"ZY\" AND issuetype = Story AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Pick out all the issues a team is up against.",
        "output": "(team = ateam or team = dreamteam or team = engineroom) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Find all bugs in board 12 that have been designated as \"high priority\" and have been updated within the last 24 hours.",
        "output": "board = \"12\" AND issuetype = Bug AND priority = \"High\" AND updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Compile all the unsolved queries in the \"ZY\" project.",
        "output": "project = \"ZY\" AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Discover all neglected matters in the \"ZY\" project.",
        "output": "project = \"ZY\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A specific user's assigned issues that have the label from project XYZ can be listed here.",
        "output": "project = XYZ AND assignee = \"jane.smith\" AND labels = \"backend-bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A list of stories is provided here, with the label \"done\" given to them.",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to have a list of all assignments linked to the \"Z-587AC\" project and given to John Doe and due in the next three days.",
        "output": "project = \"Z-587AC\" AND issuetype = Task AND assignee = \"John Doe\" AND duedate <= 3d"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Compile all the difficulties for a team.",
        "output": "(team = ateam or team = dreamteam or team = engineroom) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar must identify the bugs living in Board 12.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project XYZ is requested to display all the issues with a particular custom field value and priority.",
        "output": "project = XYZ AND cf[10008] = \"Custom Value\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring up all pending issues in the \"ZY\" project.",
        "output": "project = \"ZY\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Compile all the bugs that were graded critical.",
        "output": "issuetype = Bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Which assignments are lagging behind the schedule?",
        "output": "duedate < startOfDay() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The stories in this list have the tag \"done\".",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you point out all the issues related to the \"customer\" module?",
        "output": "module = \"customer\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Produce a list of bugs with a priority of \"High\".",
        "output": "priority = \"High\" AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring me all epics under the \"Z-587AC\" project that have not been commenced.",
        "output": "project = \"Z-587AC\" AND issuetype = Epic AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "To ensure the success of the \"ACM\" project, all open issues must be listed.",
        "output": "project = \"ACM\" AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "My obligation is to take a look at all the stories given to me.",
        "output": "issuetype = \"Story\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you please present me with all the bugs assigned to mkulakar?",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to be informed about all open tasks.",
        "output": "issuetype = \"Task\" AND status != \"Closed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I require to have a look at the bugs allocated to me.",
        "output": "assignee = currentUser() AND issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieve an inventory of bugs from board 13 which the Scrum Team \"DevOps\" have dealt with.",
        "output": "issuetype = \"Bug\" AND board = \"13\" AND \"Scrum Team\" = \"DevOps\" AND status = \"Resolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Do you have a list of the bugs found in the last week?",
        "output": "issuetype = \"Bug\" AND created >= startOfWeek(\"-1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Link \"urgent\" issues to \"Jane Smith\".",
        "output": "labels = \"urgent\" AND assignee = \"Jane Smith\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Construct a list of bugs with the priority of \"High\".",
        "output": "priority = \"High\" AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Testing\" has to tackle a selection of issues that have \"Unresolved\" resolution.",
        "output": "\"Scrum Team\" = \"Testing\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "\"Low\" priority issues assigned to the Scrum Team \"Testing\" need to be gathered.",
        "output": "\"Scrum Team\" = \"Testing\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "One can list all of the issues that are connected to a certain user and have a specified label from project XYZ.",
        "output": "project = XYZ AND assignee = \"jane.smith\" AND labels = \"backend-bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"In Review\" status tasks that have been assigned to the Scrum Team \"Design\" must be listed.",
        "output": "issuetype = \"Task\" AND \"Scrum Team\" = \"Design\" AND status = \"In Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Testing\" is requested to look for all issues with a \"Low\" priority.",
        "output": "\"Scrum Team\" = \"Testing\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Would I be able to get a list of the bugs that are labeled as \"critical\" and assigned to me?",
        "output": "assignee = currentUser() AND issuetype = \"Bug\" AND labels = \"critical\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "\"John Doe\" should be given all bugs with \"Medium\" priority.",
        "output": "priority = \"Medium\" AND issuetype = Bug AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "\"Done\" labeling of the stories is now complete.",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Exhibit stories with an attachment that are still in the works.",
        "output": "issuetype = Story AND status = \"In Progress\" AND attachments is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Accumulate all the bugs that have been determined to be critical.",
        "output": "issuetype = Bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "We should observe all the fixed troubles.",
        "output": "resolution is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Display the stories related to project XYZ that have a priority of \"Medium\" and are assigned to john.doe@example.com.",
        "output": "project = XYZ AND assignee = 'john.doe@example.com' AND issuetype = Story AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Give me stories that demonstrate an attachment and are in the \"In Progress\" status.",
        "output": "issuetype = Story AND status = \"In Progress\" AND attachments is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Provide an overview of all the issues that have been discussed with remarks in the last day.",
        "output": "commentDate >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Produce a list of matters that have a due date assigned.",
        "output": "duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show the bugs marked as \"high priority\" in board 12 which have been updated within the last 24 hours.",
        "output": "board = \"12\" AND issuetype = Bug AND priority = \"High\" AND updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Inform me of all the bugs in board 12 which have been assigned to me.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present the active tasks allocated to John Doe.",
        "output": "assignee = \"John Doe\" AND issuetype = Task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "List all problems that have added documents but have not been assigned to any user.",
        "output": "attachments is not EMPTY AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Make visible all issues with attachments that haven't been assigned to a person.",
        "output": "attachments is not EMPTY AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The heading of the list of stories should be \"done\".",
        "output": "issuetype = \"Story\" AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Choose all issues that have a targeted fix version and status in project ABC.",
        "output": "project = ABC AND fixVersion = \"4.0.0\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Provide me with an overview of all epics.",
        "output": "issuetype = \"Epic\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I want to see all of the bugs that have been assigned to me on board 14 and are of priority \"Medium\".",
        "output": "project = \"TA\" AND issuetype = \"Bug\" AND board = \"14\" AND assignee = currentUser() AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Fetching a list of sub-tasks linked to \"ACM-123\" issue key.",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Uncover all issues that \"john.doe\" indicated that have been marked as \"Duplicate\".",
        "output": "reporter = \"john.doe\" AND resolution = \"Duplicate\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Display all tasks on board 14, which are assigned to the \"Backend\" Scrum Team and have been set to \"In Progress\".",
        "output": "issuetype = Task AND board = \"14\" AND \"Scrum Team\" = \"Backend\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project ABC requires a parent epic and resolution linked with every issue.",
        "output": "project = ABC AND \"Epic Link\" = \"EPIC-123\" AND resolution = \"Fixed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "All the active tasks are linked to John Doe.",
        "output": "assignee = \"John Doe\" AND issuetype = Task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Hand over all \"urgent\" issues to \"Jane Smith\".",
        "output": "labels = \"urgent\" AND assignee = \"Jane Smith\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Are there any bugs that have been created in the past seven days?",
        "output": "issuetype = \"Bug\" AND created >= startOfWeek(\"-1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The stories have received a \"done\" label.",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Creating a list of all the open issues found in the \"ACM\" project is necessary.",
        "output": "project = \"ACM\" AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Security\" require bugs in board 17 that are classified with a priority of \"Medium\" and a status of \"In Progress\".",
        "output": "issuetype = Bug AND board = \"17\" AND \"Scrum Team\" = \"Security\" AND priority = \"Medium\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Discover all of the issues facing a team.",
        "output": "(team = ateam or team = dreamteam or team = engineroom) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Furnish me with a list of all the issues I have attributed to or reported myself.",
        "output": "reporter = currentUser() OR assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Come up with a list of epics that must be done within seven days.",
        "output": "issuetype = Epic AND duedate <= endOfDay(\"+1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Design\" have to enumerate all sub-tasks in the \"TA\" project with resolution of \"Done\".",
        "output": "issuetype = Sub-task AND \"Scrum Team\" = \"Design\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Under the \"Z-587AC\" project, it is necessary to make a list of tasks that all have a due date assigned.",
        "output": "project = \"Z-587AC\" AND issuetype = \"Task\" AND duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show all issues for Board 16, belonging to the Support Scrum Team, that have a Low priority and are In Progress.",
        "output": "board = \"16\" AND \"Scrum Team\" = \"Support\" AND priority = \"Low\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Give me a glimpse of all epics.",
        "output": "issuetype = \"Epic\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Reveal all issues reported by \"john.doe\" with the resolution \"Duplicate\".",
        "output": "reporter = \"john.doe\" AND resolution = \"Duplicate\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project XYZ wishes to present the issues with a specific custom field value and priority.",
        "output": "project = XYZ AND cf[10008] = \"Custom Value\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please display all the epics that the Scrum Team \"Operations\" have and its priority is \"Medium.\"",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Operations\" AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Display to me those bugs linked to me.",
        "output": "assignee = currentUser() AND issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project ABC provides an option to display all issues with a given custom field value and reporter.",
        "output": "project = ABC AND cf[10007] = \"Custom Value\" AND reporter = \"john.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A list of items that were adjusted over the last 24 hours was provided.",
        "output": "updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I must analyze the high-priority matters that have been given to me.",
        "output": "priority = High AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The user \"john.doe\" has reported some issues, so it is essential to select those with the resolution \"Done\".",
        "output": "reporter = \"john.doe\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project ABC provides a user with the ability to show all issues with a particular custom field value and reporter.",
        "output": "project = ABC AND cf[10007] = \"Custom Value\" AND reporter = \"john.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe is assigned to all bugs of \"Medium\" priority.",
        "output": "priority = \"Medium\" AND issuetype = Bug AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "An inventory of items that were updated in the previous 24 hours was offered.",
        "output": "updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project ABC has open bugs that need to be listed.",
        "output": "project = ABC AND issuetype = bug AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieve all unresolved issues related to the \"ZY\" project.",
        "output": "project = \"ZY\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Mark those issues that appeal to you.",
        "output": "(assignee = currentUser() or reporter = currentUser()) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"Development\" Scrum Team is expected to produce a list of bugs that are currently \"In Progress\".",
        "output": "issuetype = \"Bug\" AND \"Scrum Team\" = \"Development\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The topics that were altered in the last day were listed.",
        "output": "updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A compilation of topics that were adjusted in the past day was given.",
        "output": "updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Look up difficulties that have the word \"urgent\" in the description.",
        "output": "description ~ \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "No one has been tasked with any tasks.",
        "output": "issuetype = \"Task\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A list of stories that have been marked as \"done\" should be displayed.",
        "output": "issuetype = \"Story\" AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Come up with a list of bugs which carries a priority of \"High\".",
        "output": "priority = \"High\" AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The tasks assigned to the Scrum Team \"Design\" and currently in the \"In Review\" status must be listed.",
        "output": "issuetype = \"Task\" AND \"Scrum Team\" = \"Design\" AND status = \"In Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Testing\" should bring back all issues with \"Low\" priority.",
        "output": "\"Scrum Team\" = \"Testing\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "All issues with a designated fix version and status must be chosen in project ABC.",
        "output": "project = ABC AND fixVersion = \"4.0.0\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar needs to compile a list of bugs assigned to Board 12.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Keep an eye on all unresolved issues that have been reported this week.",
        "output": "created >= startOfWeek() AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bringing a set of sub-tasks interrelated to \"ACM-123\" issue key.",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe has created a selection of issues in the last thirty days.",
        "output": "creator = \"John Doe\" AND created >= -30d"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "These stories are labeled with the word \"done\".",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "We need to view all the fixed issues.",
        "output": "resolution is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to view all the bugs assigned to me.",
        "output": "assignee = currentUser() AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe has brought multiple issues to light in the last thirty days.",
        "output": "creator = \"John Doe\" AND created >= -30d"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Compiling a list of all the open issues in the \"ACM\" project is a priority.",
        "output": "project = \"ACM\" AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Indicate all matters raised by \"john.doe\" with the resolution \"Duplicate\".",
        "output": "reporter = \"john.doe\" AND resolution = \"Duplicate\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Testing\" is responsible for dealing with a set of unresolved issues.",
        "output": "\"Scrum Team\" = \"Testing\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A \"done\" label has been applied to the list of stories.",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Be sure to include all reported unresolved issues from this week.",
        "output": "created >= startOfWeek() AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you show me epics labeled \"Feature\"?",
        "output": "issuetype = \"Epic\" AND labels = \"Feature\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Mark all problems with the \"Frontend\" component that are labelled \"Low\" priority.",
        "output": "component = \"Frontend\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring back difficulties that have a description including the word \"urgent\".",
        "output": "description ~ \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to be shown all the bugs in board 12 which have been assigned to me.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Frontend\" must list all the sub-tasks of the \"TA\" project that have a status of \"To Do\".",
        "output": "project = \"TA\" AND issuetype = \"Sub-task\" AND \"Scrum Team\" = \"Frontend\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "\"High\" should be the priority for the list of bugs.",
        "output": "issuetype = \"Bug\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you supply me with a list of epics that should be finished within one week\u2019s time?",
        "output": "issuetype = Epic AND duedate <= endOfDay(\"+1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show all of the troubles brought up by \"john.doe\" that have been fixed as \"Duplicate\".",
        "output": "reporter = \"john.doe\" AND resolution = \"Duplicate\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Design\" must make note of all sub-tasks in the \"TA\" project that have been completed.",
        "output": "issuetype = Sub-task AND \"Scrum Team\" = \"Design\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you show me the list of open tasks?",
        "output": "issuetype = \"Task\" AND status != \"Closed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present all tasks in board 14 that are designated to the \"Backend\" Scrum Team and are marked as \"In Progress\".",
        "output": "issuetype = Task AND board = \"14\" AND \"Scrum Team\" = \"Backend\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Does the \"customer\" module have any problems?",
        "output": "module = \"customer\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Let me see all the high-priority epics in the \"ACM\" project.",
        "output": "project = \"ZY\" AND issuetype = \"Epic\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The aim is to obtain stories with the label \"Feature\" and a status of \"To Do\".",
        "output": "issuetype = Story AND labels = \"Feature\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Would it be possible to give me a list of the bugs that have been marked as \"critical\" and assigned to me?",
        "output": "assignee = currentUser() AND issuetype = \"Bug\" AND labels = \"critical\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "All bugs attributed to mkulakar in Board 12 must be listed.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe is responsible for exhibiting the stories.",
        "output": "issuetype = \"Story\" AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present every bug associated with mkulakar.",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe should make sure all stories he was given are displayed.",
        "output": "issuetype = \"Story\" AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "View all tasks in board 14 that have been assigned to the Scrum Team named \"Backend\" and have a status of \"In Progress\".",
        "output": "issuetype = Task AND board = \"14\" AND \"Scrum Team\" = \"Backend\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Design\" has a list of tasks that are currently in the \"In Review\" status.",
        "output": "issuetype = \"Task\" AND \"Scrum Team\" = \"Design\" AND status = \"In Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Explore the list of open jobs in project XYZ.",
        "output": "project = XYZ AND issuetype = task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Testing\" has a collection of unresolved issues that need to be addressed.",
        "output": "\"Scrum Team\" = \"Testing\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Furnish a compilation of topics that have a due date established.",
        "output": "duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The user \"John Doe\" is provided with all the active tasks.",
        "output": "assignee = \"John Doe\" AND issuetype = Task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Could you tell me the open tasks with due dates in the next 3 days?",
        "output": "issuetype = \"Task\" AND status != \"Closed\" AND duedate <= endOfDay(\"+3d\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I have to inspect the high-priority problems that have been assigned to me.",
        "output": "priority = High AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Take note of all issues attributed to users in the \"Development\" Scrum Team.",
        "output": "\"Scrum Team\" = \"Development\" AND assignee != null"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "For the epic with key \"ACM-123\", show me every sub-task that has been marked as \"in progress\".",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task AND status = \"in progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What epics have been given to the Scrum Team \"Frontend\" with a priority of \"High\"?",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Frontend\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"ACM\" project should have all of its open issues listed.",
        "output": "project = \"ACM\" AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The priority of the list of bugs must be set to \"High\".",
        "output": "issuetype = \"Bug\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Support\" needs a rundown of epics that have been labeled as \"High\" Priority.",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Support\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I should be aware of the high-priority issues that have been assigned to me.",
        "output": "priority = High AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Find all issues that have \"Custom Value\" for the custom field value and \"2023-11-30\" for the due date.",
        "output": "cf[10029] = \"Custom Value\" AND due = \"2023-11-30\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The TA project must display all stories that the QA Scrum Team is responsible for and have not been resolved yet.",
        "output": "issuetype = Story AND \"Scrum Team\" = \"QA\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is a necessity to select only the issues with issue type \"Bug\" and assignee \"jane.doe\".",
        "output": "issuetype = \"Bug\" AND assignee = \"jane.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Create a compilation of bugs that have been marked as critical.",
        "output": "issuetype = Bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project ABC requires that any problem have a related epic and resolution.",
        "output": "project = ABC AND \"Epic Link\" = \"EPIC-123\" AND resolution = \"Fixed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Provide me stories that are in the \"In Progress\" state and have an accompanying attachment.",
        "output": "issuetype = Story AND status = \"In Progress\" AND attachments is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"product\" team should list all feature requests that have been assigned to them for project XYZ.",
        "output": "project = XYZ AND issuetype = \"feature request\" AND team = \"product\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present me the tales that have been designated as \"ready for review\".",
        "output": "issuetype = \"Story\" AND \"Review Status\" = \"Ready for Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gather all the problems a team is facing.",
        "output": "(team = ateam or team = dreamteam or team = engineroom) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Highlight the problems that fascinate you.",
        "output": "(assignee = currentUser() or reporter = currentUser()) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "For project XYZ, the \"product\" team should provide a list of all feature requests assigned to them.",
        "output": "project = XYZ AND issuetype = \"feature request\" AND team = \"product\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need a list of open tasks.",
        "output": "issuetype = \"Task\" AND status != \"Closed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "My responsibility is to observe all the stories delegated to me.",
        "output": "issuetype = \"Story\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Search all matters regarding the component \"Frontend\" with \"Low\" priority.",
        "output": "component = \"Frontend\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Collect all issues assigned to people in the \"Development\" Scrum Team.",
        "output": "\"Scrum Team\" = \"Development\" AND assignee != null"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe should know his tasks which are currently active.",
        "output": "assignee = \"John Doe\" AND issuetype = Task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I want to view all the epics that were assigned to the Scrum Team \"Operations\" that have a priority of \"Medium\".",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Operations\" AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Any tasks that need doing have not been assigned to anyone.",
        "output": "issuetype = \"Task\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Support\" requires a list of epics that have been marked with a priority level of \"High\".",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Support\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A list that contains stories identified as \"done\" needs to be presented.",
        "output": "issuetype = \"Story\" AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show every bug allocated to mkulakar.",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Making a list of all the open issues in the \"ACM\" project is necessary.",
        "output": "project = \"ACM\" AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A \"done\" label was marked on the list of stories.",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "All issues with attachments that haven't been assigned, please display them.",
        "output": "attachments is not EMPTY AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring to my attention all the bugs in board 12 that are given to me.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to view the bugs delegated to me.",
        "output": "assignee = currentUser() AND issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Uncover all unassigned controversies in the \"ZY\" project.",
        "output": "project = \"ZY\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like you to make a list of epics that have to be done within the next seven days.",
        "output": "issuetype = Epic AND duedate <= endOfDay(\"+1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I am to inspect all the accounts apportioned to me.",
        "output": "issuetype = \"Story\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gather a compilation of issues in board 12 that is labelled with \"urgent\" and designated to the Scrum Team \"Development\".",
        "output": "board = \"12\" AND labels = \"urgent\" AND \"Scrum Team\" = \"Development\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project XYZ aims to identify the issues with a certain custom field value and priority.",
        "output": "project = XYZ AND cf[10008] = \"Custom Value\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Examine the bugs which are assigned to me.",
        "output": "assignee = currentUser() AND issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Reveal all problems reported by \"john.doe\" that have been settled as \"Duplicate\".",
        "output": "reporter = \"john.doe\" AND resolution = \"Duplicate\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Let me take a look at the stories that have yet to be completed.",
        "output": "issuetype = \"Story\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Issues that are labeled properly and assigned to a certain user on project XYZ can be identified.",
        "output": "project = XYZ AND assignee = \"jane.smith\" AND labels = \"backend-bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieve all epics connected with the project \"Z-587AC\" that are still not started.",
        "output": "project = \"Z-587AC\" AND issuetype = Epic AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is critical to list all open issues in the \"ACM\" project.",
        "output": "project = \"ACM\" AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The topics that have been revised over the last 24 hours were noted.",
        "output": "updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need a list of all sub-tasks under the epic with key \"ACM-123\" that are marked \"in progress\".",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task AND status = \"in progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gather all issues connected to the Scrum Team \"Testing\" with \"Low\" priority.",
        "output": "\"Scrum Team\" = \"Testing\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What tasks need to be completed by the Scrum Team \"Testing\" within the next seven days?",
        "output": "\"Scrum Team\" = \"Testing\" AND issuetype = Task AND duedate <= 1w"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Operations\" needs to demonstrate all the epics with a priority of \"Medium.\"",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Operations\" AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show all stories that are part of the TA project and they have been assigned to the QA Scrum Team and have an Unresolved state.",
        "output": "issuetype = Story AND \"Scrum Team\" = \"QA\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring up all unsolved issues concerning the \"ZY\" project.",
        "output": "project = \"ZY\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Could you please show me all of the bugs that have been assigned to me with a priority of \"Medium\" on board 14?",
        "output": "project = \"TA\" AND issuetype = \"Bug\" AND board = \"14\" AND assignee = currentUser() AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Identify all issues assigned to users in the \"Development\" Scrum Team.",
        "output": "\"Scrum Team\" = \"Development\" AND assignee != null"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present a list of all bugs marked as either \"Critical\" or \"Blocker\".",
        "output": "issuetype = \"Bug\" AND priority in (\"Critical\", \"Blocker\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The current project requires the team \"support\" to take inventory of all issues assigned to them.",
        "output": "team = \"support\" AND (fixVersion in unreleasedVersions() OR fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I want to be shown all the bugs in board 12 that have been assigned to me.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gather all matters allocated to members of the \"Development\" Scrum Team.",
        "output": "\"Scrum Team\" = \"Development\" AND assignee != null"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The list of bugs must be classified as \"High\" priority.",
        "output": "issuetype = \"Bug\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present me tasks that have been classified as blocked.",
        "output": "issuetype = Task AND status = Blocked"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"ACM\" project must have a list of all of its open issues.",
        "output": "project = \"ACM\" AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Permit me to view the bugs that I am assigned with.",
        "output": "assignee = currentUser() AND issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Display the list of bugs assigned to me.",
        "output": "assignee = currentUser() AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Make a register of bugs with \"High\" priority.",
        "output": "priority = \"High\" AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "For the past 24 hours, show all the problems and their accompanying remarks.",
        "output": "commentDate >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The issues that have a specific label and pertain to a certain user in project XYZ can be recorded.",
        "output": "project = XYZ AND assignee = \"jane.smith\" AND labels = \"backend-bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Spotlight all pressing concerns with the \"urgent\" label.",
        "output": "labels = \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Look up all the duties given to John Doe in board 8 with a priority of \"Low\".",
        "output": "project = \"TA\" AND issuetype = \"Task\" AND board = \"8\" AND assignee = \"John Doe\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show me all the bugs that are John's fault.",
        "output": "issuetype = \"Bug\" AND reporter = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I want to have a look at all the bugs given to me.",
        "output": "assignee = currentUser() AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I must be shown all the bugs in board 12 that have been designated to me.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show me the accounts of the stories that are in process.",
        "output": "issuetype = \"Story\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "\"Feature\" epics - can you display them?",
        "output": "issuetype = \"Epic\" AND labels = \"Feature\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Display all bugs that have been assigned the \"Critical\" or \"Blocker\" label.",
        "output": "issuetype = \"Bug\" AND priority in (\"Critical\", \"Blocker\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can I have a look of all open tasks?",
        "output": "issuetype = \"Task\" AND status != \"Closed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A list of tasks with respective due dates is needed for the \"Z-587AC\" project.",
        "output": "project = \"Z-587AC\" AND issuetype = \"Task\" AND duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gathering a set of sub-tasks connected to \"ACM-123\" issue key.",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Have you become aware of any issues pertaining to the \"customer\" module?",
        "output": "module = \"customer\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Security\" are presently working on bugs in board 17 that have a priority of \"Medium\".",
        "output": "issuetype = Bug AND board = \"17\" AND \"Scrum Team\" = \"Security\" AND priority = \"Medium\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Identify all unallocated issues in the \"ZY\" project.",
        "output": "project = \"ZY\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The display should include a list of stories with the tag \"done\".",
        "output": "issuetype = \"Story\" AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Design\" must list all sub-tasks in the \"TA\" project that have been marked as resolved.",
        "output": "issuetype = Sub-task AND \"Scrum Team\" = \"Design\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "We must display all the rectified issues.",
        "output": "resolution is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please make me aware of any critical bugs found in project ABC.",
        "output": "project = ABC AND issuetype = bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring to attention all issues with attachments that have not been given to any individual.",
        "output": "attachments is not EMPTY AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would appreciate it if you could share with me all of the bugs assigned to mkulakar.",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "In project ABC, select all issues with a set fix version and status.",
        "output": "project = ABC AND fixVersion = \"4.0.0\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present all stories in the TA project that the QA Scrum Team has been assigned to and that have not been solved yet.",
        "output": "issuetype = Story AND \"Scrum Team\" = \"QA\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What tales in the \"ZY\" project are still being written?",
        "output": "project = \"ZY\" AND issuetype = Story AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Give me a list of all bugs caused by John Doe.",
        "output": "issuetype = \"Bug\" AND reporter = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What assignments are due for the Scrum Team \"Testing\" by the end of the next week?",
        "output": "\"Scrum Team\" = \"Testing\" AND issuetype = Task AND duedate <= 1w"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Tell me all the bugs that are designated to me.",
        "output": "assignee = currentUser() AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "An outline of what was changed in the last 24 hours was listed.",
        "output": "updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Organize all the bugs that were categorized as critical.",
        "output": "issuetype = Bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is important to select only the issues with issue type \"Bug\" and assignee \"jane.doe\".",
        "output": "issuetype = \"Bug\" AND assignee = \"jane.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you tell me what matters are linked to the \"customer\" module?",
        "output": "module = \"customer\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Any bug with \"Medium\" priority should be assigned to John Doe.",
        "output": "priority = \"Medium\" AND issuetype = Bug AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is essential to assemble a list of open bugs in project ABC.",
        "output": "project = ABC AND issuetype = bug AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I'm looking for the tasks that have not been completed in time.",
        "output": "duedate < startOfDay() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Hunt down troubles that have \"urgent\" included in the description.",
        "output": "description ~ \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What tasks will the Scrum Team \"Testing\" have to finish within the next seven days?",
        "output": "\"Scrum Team\" = \"Testing\" AND issuetype = Task AND duedate <= 1w"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is imperative to demonstrate all the solved problems.",
        "output": "resolution is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Identifying a set of sub-tasks affiliated with \"ACM-123\" issue key.",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gather all the unresolved matters related to the \"ZY\" project.",
        "output": "project = \"ZY\" AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "This week has seen a number of unresolved issues, be sure to take all of them into account.",
        "output": "created >= startOfWeek() AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to take a look at all of the high-priority issues that are assigned to me.",
        "output": "priority = High AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring me the bugs that I am responsible for.",
        "output": "issuetype = Bug AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you give me an overview of tasks that have not been completed in time?",
        "output": "duedate < startOfDay() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show all significant issues with the \"urgent\" label.",
        "output": "labels = \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Obtain all epics linked to \"Z-587AC\" that have not been initiated.",
        "output": "project = \"Z-587AC\" AND issuetype = Epic AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Obtain a catalogue of bugs situated in board 13 that the Scrum Team \"DevOps\" have solved.",
        "output": "issuetype = \"Bug\" AND board = \"13\" AND \"Scrum Team\" = \"DevOps\" AND status = \"Resolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "There should be a list of stories that have the label \"done\".",
        "output": "issuetype = \"Story\" AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Obtaining of stories that are labeled as \"Feature\" with a status of \"To Do\" is required.",
        "output": "issuetype = Story AND labels = \"Feature\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Design\" is tasked with reviewing a list of tasks.",
        "output": "issuetype = \"Task\" AND \"Scrum Team\" = \"Design\" AND status = \"In Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Highlight all bugs assigned to mkulakar.",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show all the bugs.",
        "output": "issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "All problems attributed to the team \"support\" in the current project must be identified.",
        "output": "team = \"support\" AND (fixVersion in unreleasedVersions() OR fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Collect all the bugs that are considered critical.",
        "output": "issuetype = Bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar@cisco.com has been apprised of a listing of bugs associated with project ACM.",
        "output": "project = \"ACM\" AND issuetype = \"Bug\" AND assignee = \"mkulakar@cisco.com\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe should display all stories that are designated to him.",
        "output": "issuetype = \"Story\" AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The objective is to retrieve stories that have the label \"Feature\" and a status of \"To Do\".",
        "output": "issuetype = Story AND labels = \"Feature\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "This week, select all reported unresolved issues.",
        "output": "created >= startOfWeek() AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present all the issues from the past 24 hours along with their respective comments.",
        "output": "commentDate >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Highlight all issues that \"john.doe\" pointed out with the solution \"Duplicate\".",
        "output": "reporter = \"john.doe\" AND resolution = \"Duplicate\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I ask to see all the epics given to the Scrum Team \"Operations\" which have been classified as \"Medium\" priority.",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Operations\" AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "All bugs in board 15 that are assigned to Mary Johnson, with a priority of \"High\" and a status of \"To Do\", must be retrieved.",
        "output": "issuetype = Bug AND board = \"15\" AND assignee = \"Mary Johnson\" AND priority = \"High\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show me assignments that are marked as impeded.",
        "output": "issuetype = Task AND status = Blocked"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Testing\" is to go after all issues categorized as \"Low\".",
        "output": "\"Scrum Team\" = \"Testing\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Uncover all difficulties which demand immediate attention with the \"urgent\" label.",
        "output": "labels = \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to view all open tasks.",
        "output": "issuetype = \"Task\" AND status != \"Closed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Could you let me know the critical bugs found in project ABC?",
        "output": "project = ABC AND issuetype = bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Highlight all tasks in board 14 that are allocated to the Scrum Team \"Backend\" and are currently \"In Progress\".",
        "output": "issuetype = Task AND board = \"14\" AND \"Scrum Team\" = \"Backend\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Identify issues with attachments that do not have an assignee.",
        "output": "attachments is not EMPTY AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I ought to examine all the stories distributed to me.",
        "output": "issuetype = \"Story\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Display in the TA project all stories that have been attributed to the QA Scrum Team and have a designation of Unresolved.",
        "output": "issuetype = Story AND \"Scrum Team\" = \"QA\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Today's tasks that have been assigned to me are the ones I should list.",
        "output": "duedate = startOfDay() AND assignee = currentUser() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Fetching all the bugs attributed to the project \"Z-587AC\" assigned to mkulakar@cisco.com.",
        "output": "project = \"Z-587AC\" AND issuetype = Bug AND assignee = \"mkulakar@cisco.com\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Do you know the open tasks with due dates in the next 3 days?",
        "output": "issuetype = \"Task\" AND status != \"Closed\" AND duedate <= endOfDay(\"+3d\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "All bugs that are marked with \"Medium\" priority must be assigned to John Doe.",
        "output": "priority = \"Medium\" AND issuetype = Bug AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Provide me with all epics for the project \"Z-587AC\" that have not been initiated.",
        "output": "project = \"Z-587AC\" AND issuetype = Epic AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe has been the cause of these bugs - show me.",
        "output": "issuetype = \"Bug\" AND reporter = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A set of sub-tasks related to the \"ACM-123\" issue key will be retrieved.",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What tales are you working on for the \"ZY\" project currently?",
        "output": "project = \"ZY\" AND issuetype = Story AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you give me a breakdown of all the bugs that have been created in the last seven days?",
        "output": "issuetype = \"Bug\" AND created >= startOfWeek(\"-1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Get all epics pertaining to the \"Z-587AC\" project that have yet to be kicked off.",
        "output": "project = \"Z-587AC\" AND issuetype = Epic AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "My duty is to survey all the stories assigned to me.",
        "output": "issuetype = \"Story\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Reveal all situations of great importance with the \"urgent\" label.",
        "output": "labels = \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What difficulties are there with respect to the \"customer\" module?",
        "output": "module = \"customer\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you come up with a list of epics with a due date in the coming days?",
        "output": "issuetype = Epic AND duedate <= endOfDay(\"+1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieve all the tasks which are allotted to John Doe and that belong to the \"Z-587AC\" project and have a deadline that falls within the next three days.",
        "output": "project = \"Z-587AC\" AND issuetype = Task AND assignee = \"John Doe\" AND duedate <= 3d"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "To show all issues with a certain custom field value and reporter in project ABC, one can use the following.",
        "output": "project = ABC AND cf[10007] = \"Custom Value\" AND reporter = \"john.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Making a list of tasks today that have been assigned to me.",
        "output": "duedate = startOfDay() AND assignee = currentUser() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project ABC provides the facility to view all issues with a determined custom field value and reporter.",
        "output": "project = ABC AND cf[10007] = \"Custom Value\" AND reporter = \"john.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Extract all the \"AE\" project's issues with the \"urgent\" label which have the \"In Progress\" status.",
        "output": "project = \"ACM\" AND labels = \"urgent\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Will you show me the matters that have to do with the \"customer\" module?",
        "output": "module = \"customer\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Expose all the bugs.",
        "output": "issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Those sub-tasks that are assigned to the Scrum Team \"Frontend\" in the \"TA\" project should be listed and their status should be \"To Do\".",
        "output": "project = \"TA\" AND issuetype = \"Sub-task\" AND \"Scrum Team\" = \"Frontend\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Fetch a collection of bugs located in board 13 that the Scrum Team \"DevOps\" have fixed.",
        "output": "issuetype = \"Bug\" AND board = \"13\" AND \"Scrum Team\" = \"DevOps\" AND status = \"Resolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A parent epic and resolution is mandatory for any issue in Project ABC.",
        "output": "project = ABC AND \"Epic Link\" = \"EPIC-123\" AND resolution = \"Fixed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Assign the user \"Jane Smith\" to all \"urgent\" issues.",
        "output": "labels = \"urgent\" AND assignee = \"Jane Smith\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar@cisco.com has been given a directory of defects concerning project ACM.",
        "output": "project = \"ACM\" AND issuetype = \"Bug\" AND assignee = \"mkulakar@cisco.com\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Would you be able to show me epics with a label of \"Feature\"?",
        "output": "issuetype = \"Epic\" AND labels = \"Feature\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Exhibit the anecdotes that are noted as \"ready for review\".",
        "output": "issuetype = \"Story\" AND \"Review Status\" = \"Ready for Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Within the last month, John Doe has generated a series of issues.",
        "output": "creator = \"John Doe\" AND created >= -30d"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is John Doe's duty to show the stories.",
        "output": "issuetype = \"Story\" AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please assign to user \"John Doe\" any bug marked with \"Medium\" priority.",
        "output": "priority = \"Medium\" AND issuetype = Bug AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I want to be shown the high-priority epics in the \"ACM\" project.",
        "output": "project = \"ZY\" AND issuetype = \"Epic\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please provide a catalogue of the open bugs in project ABC.",
        "output": "project = ABC AND issuetype = bug AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "All of the issues with a corresponding label for a specific user on project XYZ can be listed.",
        "output": "project = XYZ AND assignee = \"jane.smith\" AND labels = \"backend-bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show all difficulties logged by \"john.doe\" with the resolution \"Duplicate\".",
        "output": "reporter = \"john.doe\" AND resolution = \"Duplicate\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It would be great if you can show me the open tasks with due dates in the next 3 days.",
        "output": "issuetype = \"Task\" AND status != \"Closed\" AND duedate <= endOfDay(\"+3d\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I am required to survey all of the high-priority issues that are assigned to me.",
        "output": "priority = High AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "There is no one assigned to any tasks.",
        "output": "issuetype = \"Task\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Find all epics linked to the project \"Z-587AC\" that have not yet begun.",
        "output": "project = \"Z-587AC\" AND issuetype = Epic AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe should complete the tasks from the \"Z-587AC\" project with a due date in the next three days.",
        "output": "project = \"Z-587AC\" AND issuetype = Task AND assignee = \"John Doe\" AND duedate <= 3d"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Get me the bugs that I have been given.",
        "output": "issuetype = Bug AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The subjects that were revised in the past day were listed.",
        "output": "updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The resolution \"Done\" is sought for all issues brought up by the user \"john.doe\".",
        "output": "reporter = \"john.doe\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "For the \"Z-587AC\" project, it is necessary to draw up a list of tasks that have been assigned a due date.",
        "output": "project = \"Z-587AC\" AND issuetype = \"Task\" AND duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I'm interested in seeing the critical bugs in project ABC.",
        "output": "project = ABC AND issuetype = bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I request a list of all problems logged by me or assigned to me.",
        "output": "reporter = currentUser() OR assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "List all tasks on board 14 that were distributed to the \"Backend\" Scrum Team and are currently \"In Progress\".",
        "output": "issuetype = Task AND board = \"14\" AND \"Scrum Team\" = \"Backend\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project ABC demands that there is a parent epic and resolution attached to each issue.",
        "output": "project = ABC AND \"Epic Link\" = \"EPIC-123\" AND resolution = \"Fixed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please show me the stories that are still a work in progress.",
        "output": "issuetype = \"Story\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Give me the list of bugs that I am assigned to.",
        "output": "assignee = currentUser() AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Construct an inventory of bugs that are labeled as critical.",
        "output": "issuetype = Bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Exhibit all tasks on board 14 that have been handed to the \"Backend\" Scrum Team and are labeled as \"In Progress\".",
        "output": "issuetype = Task AND board = \"14\" AND \"Scrum Team\" = \"Backend\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A list of changes made in the last day was presented.",
        "output": "updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Creating a list of tasks for today which I have been given is a must.",
        "output": "duedate = startOfDay() AND assignee = currentUser() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Get a record of bugs in board 13 that Scrum Team \"DevOps\" has categorized as \"Resolved\".",
        "output": "issuetype = \"Bug\" AND board = \"13\" AND \"Scrum Team\" = \"DevOps\" AND status = \"Resolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would be grateful if you can provide me with the open tasks with due dates in the next 3 days.",
        "output": "issuetype = \"Task\" AND status != \"Closed\" AND duedate <= endOfDay(\"+3d\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe is responsible for any bug set to \"Medium\" priority.",
        "output": "priority = \"Medium\" AND issuetype = Bug AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Prioritizing all the issues in project XYZ with a specific custom field value.",
        "output": "project = XYZ AND cf[10008] = \"Custom Value\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Disclose to me the accounts that are described as \"ready for review\".",
        "output": "issuetype = \"Story\" AND \"Review Status\" = \"Ready for Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe has all the active tasks assigned to him.",
        "output": "assignee = \"John Doe\" AND issuetype = Task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Sort all issues that have the \"Frontend\" component and \"Low\" priority.",
        "output": "component = \"Frontend\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Choose all the challenges for a team.",
        "output": "(team = ateam or team = dreamteam or team = engineroom) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present stories that have an attachment and display those that are in the \"In Progress\" state.",
        "output": "issuetype = Story AND status = \"In Progress\" AND attachments is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "\"Testing\" Scrum Team is to bring forth all issues having \"Low\" priority.",
        "output": "\"Scrum Team\" = \"Testing\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe is the one who has all the active tasks assigned.",
        "output": "assignee = \"John Doe\" AND issuetype = Task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring up all the jobs that were handed to John Doe which have a priority of \"Low\" in board 8.",
        "output": "project = \"TA\" AND issuetype = \"Task\" AND board = \"8\" AND assignee = \"John Doe\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project XYZ has been tasked to showcase all the issues with a particular custom field value and priority.",
        "output": "project = XYZ AND cf[10008] = \"Custom Value\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "List the bugs in board 12 with \"high priority\" and those that have been updated in the last 24 hours.",
        "output": "board = \"12\" AND issuetype = Bug AND priority = \"High\" AND updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I must review all the stories attributed to me.",
        "output": "issuetype = \"Story\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A list of epics with a priority of \"High\" is required by the Scrum Team \"Support\".",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Support\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Design\" need to compile a list of all sub-tasks in the \"TA\" project that have been marked as \"Done\".",
        "output": "issuetype = Sub-task AND \"Scrum Team\" = \"Design\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"product\" team must give a list of all feature requests related to project XYZ.",
        "output": "project = XYZ AND issuetype = \"feature request\" AND team = \"product\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Choosing only the issues with issue type \"Bug\" and assignee \"jane.doe\" is a must.",
        "output": "issuetype = \"Bug\" AND assignee = \"jane.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is mandatory to select the issues with issue type \"Bug\" and assignee \"jane.doe\".",
        "output": "issuetype = \"Bug\" AND assignee = \"jane.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you provide me with epics tagged as \"Feature\"?",
        "output": "issuetype = \"Epic\" AND labels = \"Feature\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project ABC needs you to select all issues that have a explicit fix version and status.",
        "output": "project = ABC AND fixVersion = \"4.0.0\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What are the issues concerning the \"customer\" module?",
        "output": "module = \"customer\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is the job of the \"Testing\" Scrum Team to search out all issues with a \"Low\" priority.",
        "output": "\"Scrum Team\" = \"Testing\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Write down a list of all the issues with attachments.",
        "output": "attachments is not empty"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is important to provide a list of all open bugs in project ABC.",
        "output": "project = ABC AND issuetype = bug AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show me John Doe's production of bugs.",
        "output": "issuetype = \"Bug\" AND reporter = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "An action of marking the story list with \"done\" has been taken.",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Mark any problem which is to be treated urgently with the \"urgent\" label.",
        "output": "labels = \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Make visible all important problems with the \"urgent\" label.",
        "output": "labels = \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The list of bugs must have a \"High\" priority.",
        "output": "issuetype = \"Bug\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Fetch me the list of bugs that I am assigned to.",
        "output": "assignee = currentUser() AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A compilation of bugs that the \"Development\" Scrum Team has to work on and are in the \"In Progress\" state should be listed.",
        "output": "issuetype = \"Bug\" AND \"Scrum Team\" = \"Development\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "In the past month, John Doe has raised a variety of issues.",
        "output": "creator = \"John Doe\" AND created >= -30d"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Design\" are required to list all sub-tasks in the \"TA\" project that have a resolution of \"Done\".",
        "output": "issuetype = Sub-task AND \"Scrum Team\" = \"Design\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Expose me to all the bugs in board 12 that are assigned to me.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieve all issues that have the \"Frontend\" component and \"Low\" priority.",
        "output": "component = \"Frontend\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"Development\" Scrum Team is responsible for displaying all the bugs that are in the \"In Progress\" status.",
        "output": "issuetype = \"Bug\" AND \"Scrum Team\" = \"Development\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "For any problem under Project ABC, a parent epic and resolution must be present.",
        "output": "project = ABC AND \"Epic Link\" = \"EPIC-123\" AND resolution = \"Fixed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to see every issue that is marked as Low priority and In Progress, and has been assigned to the Support Scrum Team in Board 16.",
        "output": "board = \"16\" AND \"Scrum Team\" = \"Support\" AND priority = \"Low\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Point out all issues that contain the value of the custom field as \"Custom Value\" and the due date as \"2023-11-30\".",
        "output": "cf[10029] = \"Custom Value\" AND due = \"2023-11-30\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Demonstrate all tasks on board 14 that were given to the \"Backend\" Scrum Team and have a status of \"In Progress\".",
        "output": "issuetype = Task AND board = \"14\" AND \"Scrum Team\" = \"Backend\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gather an array of difficulties in board 12 bearing the label \"urgent\" and appointed to the Scrum Team \"Development\".",
        "output": "board = \"12\" AND labels = \"urgent\" AND \"Scrum Team\" = \"Development\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Only list the bugs that are designated as \"Critical\" or \"Blocker\".",
        "output": "issuetype = \"Bug\" AND priority in (\"Critical\", \"Blocker\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Consider selecting the issues with issue type \"Bug\" and assignee \"jane.doe\".",
        "output": "issuetype = \"Bug\" AND assignee = \"jane.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is necessary to get stories that are identified with the label \"Feature\" and a status of \"To Do\".",
        "output": "issuetype = Story AND labels = \"Feature\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Illustrate stories that have an attachment and are in the \"In Progress\" status.",
        "output": "issuetype = Story AND status = \"In Progress\" AND attachments is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe must show all the stories that have been allocated to him.",
        "output": "issuetype = \"Story\" AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Uncover all the bugs.",
        "output": "issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieve a group of issues in board 12 which is tagged with \"urgent\" and earmarked to the Scrum Team \"Development\".",
        "output": "board = \"12\" AND labels = \"urgent\" AND \"Scrum Team\" = \"Development\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The stories have been labeled with \"done\".",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Expose all matters with a high priority with the \"urgent\" label.",
        "output": "labels = \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What are the open bugs related to project ABC?",
        "output": "project = ABC AND issuetype = bug AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar should be able to provide a list of bugs in Board 12.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Documenting all open issues in the \"ACM\" project is a must.",
        "output": "project = \"ACM\" AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "In project ABC, opt for all problems that have a certain fix version and status.",
        "output": "project = ABC AND fixVersion = \"4.0.0\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "\"Done\" is the label used for the list of stories.",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Make known to me all the bugs in board 12 that are allotted to me.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Obtain all of the \"AE\" project's issues with the \"urgent\" label which are in the \"In Progress\"",
        "output": "project = \"ACM\" AND labels = \"urgent\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show me stories with an attachment that are still in the process of being completed.",
        "output": "issuetype = Story AND status = \"In Progress\" AND attachments is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project XYZ is set to demonstrate all the issues with an explicit custom field value and priority.",
        "output": "project = XYZ AND cf[10008] = \"Custom Value\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "No tasks have been allocated to any individual.",
        "output": "issuetype = \"Task\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you show me the sub-tasks for the epic with key \"ACM-123\" that are \"in progress\"?",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task AND status = \"in progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "All matters assigned to the team \"support\" in the current project must be listed.",
        "output": "team = \"support\" AND (fixVersion in unreleasedVersions() OR fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Make available to me the tales that have been categorized as \"ready for review\".",
        "output": "issuetype = \"Story\" AND \"Review Status\" = \"Ready for Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "This list contains stories, and they have been marked as \"done\".",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present me with all of the issues in Board 16 that have been assigned to the Support Scrum Team,",
        "output": "board = \"16\" AND \"Scrum Team\" = \"Support\" AND priority = \"Low\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Go over all the outstanding tasks assigned in project XYZ.",
        "output": "project = XYZ AND issuetype = task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Issue a list of all the problems with their attachments.",
        "output": "attachments is not empty"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Security\" has a list of bugs in board 17 that have a priority of \"Medium\" and a status of \"In Progress\".",
        "output": "issuetype = Bug AND board = \"17\" AND \"Scrum Team\" = \"Security\" AND priority = \"Medium\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show all tasks on board 14 that are allocated to the \"Backend\" Scrum Team and are set to \"In Progress\".",
        "output": "issuetype = Task AND board = \"14\" AND \"Scrum Team\" = \"Backend\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Generate a survey of issues that have a due date determined.",
        "output": "duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The problems with a high-level of importance that are assigned to me should be examined.",
        "output": "priority = High AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Go through the list and select those that you are drawn to.",
        "output": "(assignee = currentUser() or reporter = currentUser()) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The stories in the list are labeled \"done\".",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The list of stories should be labeled \"done\" and displayed.",
        "output": "issuetype = \"Story\" AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Identify all yet-to-be-completed activities in project XYZ.",
        "output": "project = XYZ AND issuetype = task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present me with the tales that are currently active for the \"ZY\" project.",
        "output": "project = \"ZY\" AND issuetype = Story AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "In project ABC, look for all issues with a detailed fix version and status.",
        "output": "project = ABC AND fixVersion = \"4.0.0\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Make visible all issues that have the custom field value \"Custom Value\" and due date \"2023-11-30\".",
        "output": "cf[10029] = \"Custom Value\" AND due = \"2023-11-30\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Do you have any stories that are in progress in the \"ZY\" project at this time?",
        "output": "project = \"ZY\" AND issuetype = Story AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show all stories from the TA project that have been allocated to the QA Scrum Team and remain unresolved.",
        "output": "issuetype = Story AND \"Scrum Team\" = \"QA\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you give me a list of the bugs allocated to me that have been labeled as \"critical\"?",
        "output": "assignee = currentUser() AND issuetype = \"Bug\" AND labels = \"critical\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gather all epics of the project \"Z-587AC\" that have not been started.",
        "output": "project = \"Z-587AC\" AND issuetype = Epic AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Support\" should receive a list of epics that are rated \"High\" Priority.",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Support\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Demonstrate stories with an attachment and display those that are still in the process.",
        "output": "issuetype = Story AND status = \"In Progress\" AND attachments is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The team \"support\" is obligated to provide a comprehensive list of all their assigned issues in the current project.",
        "output": "team = \"support\" AND (fixVersion in unreleasedVersions() OR fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is essential to identify all the problems that have been fixed.",
        "output": "resolution is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Reveal all bugs related to mkulakar.",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieving all bugs in board 15 that have a priority of \"High\" and are assigned to Mary Johnson with a status of \"To Do\" is Mary Johnson's job",
        "output": "issuetype = Bug AND board = \"15\" AND assignee = \"Mary Johnson\" AND priority = \"High\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Fetch all the tasks attributed to John Doe with a priority of \"Low\" in board 8.",
        "output": "project = \"TA\" AND issuetype = \"Task\" AND board = \"8\" AND assignee = \"John Doe\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "For any bug with priority set to \"Medium\",John Doe should be the assigned user.",
        "output": "priority = \"Medium\" AND issuetype = Bug AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Development\" should present a list of bugs which are in the \"In Progress\" status.",
        "output": "issuetype = \"Bug\" AND \"Scrum Team\" = \"Development\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Getting a set of sub-tasks partnered with \"ACM-123\" issue key.",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Identify all high priority bugs in board 12 which have been updated within 24 hours.",
        "output": "board = \"12\" AND issuetype = Bug AND priority = \"High\" AND updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "This week, make sure that you review all unresolved issues reported.",
        "output": "created >= startOfWeek() AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I'm asking to be shown all the critical bugs associated with project ABC.",
        "output": "project = ABC AND issuetype = bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Acquire a list ofbugs in board 13 that the Scrum Team \"DevOps\" have addressed.",
        "output": "issuetype = \"Bug\" AND board = \"13\" AND \"Scrum Team\" = \"DevOps\" AND status = \"Resolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Obtain all the troubles a team is experiencing.",
        "output": "(team = ateam or team = dreamteam or team = engineroom) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The list of stories has been given a \"done\" label.",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project XYZ requires a list of feature requests from the \"product\" team.",
        "output": "project = XYZ AND issuetype = \"feature request\" AND team = \"product\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"Frontend\" Scrum Team should provide a list of sub-tasks in the \"TA\" project that are marked as \"To Do\".",
        "output": "project = \"TA\" AND issuetype = \"Sub-task\" AND \"Scrum Team\" = \"Frontend\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe has a selection of stories that need to be shown.",
        "output": "issuetype = \"Story\" AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Demonstrate all issues that \"john.doe\" reported that have been resolved as \"Duplicate\".",
        "output": "reporter = \"john.doe\" AND resolution = \"Duplicate\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "List all issues with the \"Frontend\" component which have \"Low\" priority.",
        "output": "component = \"Frontend\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Make known all the bugs.",
        "output": "issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe has created a list of issues during the last thirty days.",
        "output": "creator = \"John Doe\" AND created >= -30d"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Display all questions which come with attachments and are not allocated to anyone.",
        "output": "attachments is not EMPTY AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Provide a register of problems that have a predetermined expiry date.",
        "output": "duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you tell me what tasks need to be completed by the Scrum Team \"Testing\" in the next seven days?",
        "output": "\"Scrum Team\" = \"Testing\" AND issuetype = Task AND duedate <= 1w"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Mary Johnson is responsible for retrieving all bugs in board 15 with a priority of \"High\" and a status of \"To Do\".",
        "output": "issuetype = Bug AND board = \"15\" AND assignee = \"Mary Johnson\" AND priority = \"High\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present all the bugs.",
        "output": "issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "List all epics on the project \"Z-587AC\" that are not yet in progress.",
        "output": "project = \"Z-587AC\" AND issuetype = Epic AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar@cisco.com has been sent a dossier of malfunctions associated with project ACM.",
        "output": "project = \"ACM\" AND issuetype = \"Bug\" AND assignee = \"mkulakar@cisco.com\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to take a look at the bugs assigned to mkulakar; could you show them to me?",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Kindly show me the stories that are being worked on.",
        "output": "issuetype = \"Story\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Unveil all issues that have a custom field value of \"Custom Value\" and due date of \"2023-11-30\".",
        "output": "cf[10029] = \"Custom Value\" AND due = \"2023-11-30\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar must review Board 12 for any bugs.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar should provide a comprehensive listing of bugs in Board 12.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar@cisco.com has been supplied a record of bugs relevant to project ACM.",
        "output": "project = \"ACM\" AND issuetype = \"Bug\" AND assignee = \"mkulakar@cisco.com\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe needs to make sure the stories assigned to him are displayed.",
        "output": "issuetype = \"Story\" AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project XYZ requires the selection of all open tasks.",
        "output": "project = XYZ AND issuetype = task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Testing\" has to work on various unresolved issues.",
        "output": "\"Scrum Team\" = \"Testing\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "We require stories with the label of \"Feature\" having a status of \"To Do\".",
        "output": "issuetype = Story AND labels = \"Feature\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieve the list of bugs under the project \"Z-587AC\" assigned to mkulakar@cisco.com is a must.",
        "output": "project = \"Z-587AC\" AND issuetype = Bug AND assignee = \"mkulakar@cisco.com\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is essential to select the issues with issue type \"Bug\" and assignee \"jane.doe\".",
        "output": "issuetype = \"Bug\" AND assignee = \"jane.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Fetch all pending tasks in the \"ZY\" project.",
        "output": "project = \"ZY\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What are the epics assigned to the Scrum Team \"Frontend\" with priority of \"High\"?",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Frontend\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Illustrate all bugs attributed to mkulakar.",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please show me all of the issues that are currently assigned to mkulakar.",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "May I have a look at the bugs assigned to me on board 14 that have a priority of \"Medium\"?",
        "output": "project = \"TA\" AND issuetype = \"Bug\" AND board = \"14\" AND assignee = currentUser() AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring together all the unsolved matters in the \"ZY\" project.",
        "output": "project = \"ZY\" AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Testing\" has unresolved issues that need to be dealt with.",
        "output": "\"Scrum Team\" = \"Testing\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A list of stories has been presented with the tag \"done\".",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to see all the bugs made by John Doe.",
        "output": "issuetype = \"Bug\" AND reporter = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Which tasks are behind schedule?",
        "output": "duedate < startOfDay() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Are there any epics that must be completed within the next week?",
        "output": "issuetype = Epic AND duedate <= endOfDay(\"+1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present all bugs that have been classified as \"Critical\" and \"Blocker\".",
        "output": "issuetype = \"Bug\" AND priority in (\"Critical\", \"Blocker\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Look for difficulties associated with the term \"urgent\".",
        "output": "description ~ \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please furnish me a list of epics that need to be done by next week.",
        "output": "issuetype = Epic AND duedate <= endOfDay(\"+1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Nobody has been given the responsibility of any tasks.",
        "output": "issuetype = \"Task\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "For project ABC, select all the issues with a particular fix version and status.",
        "output": "project = ABC AND fixVersion = \"4.0.0\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Produce a compilation of bugs with a priority of \"High\".",
        "output": "priority = \"High\" AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe will take care of all bugs with \"Medium\" priority.",
        "output": "priority = \"Medium\" AND issuetype = Bug AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Supply an inventory of matters that have a due date set.",
        "output": "duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What issues have been encountered in the past seven days?",
        "output": "issuetype = \"Bug\" AND created >= startOfWeek(\"-1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring together all the issues of the \"AE\" project with the \"urgent\" label and which have the \"In Progress\" status.",
        "output": "project = \"ACM\" AND labels = \"urgent\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring up all matters related to the \"Frontend\" item that have \"Low\" priority.",
        "output": "component = \"Frontend\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe must be aware of his active tasks.",
        "output": "assignee = \"John Doe\" AND issuetype = Task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would appreciate it if I can have a list of all the issues reported or assigned to me.",
        "output": "reporter = currentUser() OR assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Display duties that are noted as blocked.",
        "output": "issuetype = Task AND status = Blocked"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Fetch all issues assigned to users in the \"Development\" Scrum Team.",
        "output": "\"Scrum Team\" = \"Development\" AND assignee != null"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Any issues associated with Project ABC must be accompanied by a parent epic and resolution.",
        "output": "project = ABC AND \"Epic Link\" = \"EPIC-123\" AND resolution = \"Fixed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe's bugs should be displayed to me.",
        "output": "issuetype = \"Bug\" AND reporter = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A collection of stories with the title \"done\" should be shown.",
        "output": "issuetype = \"Story\" AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I must remember to write down the tasks due today which have been allotted to me.",
        "output": "duedate = startOfDay() AND assignee = currentUser() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "\"Frontend\" Scrum Team has been assigned epics with the priority of \"High\", kindly list them.",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Frontend\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Nobody has taken responsibility for any tasks.",
        "output": "issuetype = \"Task\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "All the problems with a specific reporter from project ABC can be viewed with the respective custom field value.",
        "output": "project = ABC AND cf[10007] = \"Custom Value\" AND reporter = \"john.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Arrange the bugs that were rated as critical.",
        "output": "issuetype = Bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "In order for the \"Z-587AC\" project to be successful, a comprehensive list of tasks with a set due date must be made.",
        "output": "project = \"Z-587AC\" AND issuetype = \"Task\" AND duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "In my list, I should include the tasks assigned to me that are due today.",
        "output": "duedate = startOfDay() AND assignee = currentUser() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Mary Johnson must gather all bugs with the \"High\" priority and \"To Do\" status in board 15.",
        "output": "issuetype = Bug AND board = \"15\" AND assignee = \"Mary Johnson\" AND priority = \"High\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What difficulties have arisen with the \"customer\" module?",
        "output": "module = \"customer\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Under project XYZ, display the stories with priority \"Medium\" and assigned to john.doe@example.com.",
        "output": "project = XYZ AND assignee = 'john.doe@example.com' AND issuetype = Story AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The stories provided have been given the label \"done\".",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Let me view the stories that are in progress.",
        "output": "issuetype = \"Story\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe should be assigned to take care of any bug with \"Medium\" priority.",
        "output": "priority = \"Medium\" AND issuetype = Bug AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The job of the Scrum Team \"Frontend\" is to create a list of sub-tasks in the \"TA\" project and the status for each",
        "output": "project = \"TA\" AND issuetype = \"Sub-task\" AND \"Scrum Team\" = \"Frontend\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project XYZ would like the \"product\" team to provide a list of all the feature requests assigned to them.",
        "output": "project = XYZ AND issuetype = \"feature request\" AND team = \"product\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Go through the list of unfinished tasks in project XYZ.",
        "output": "project = XYZ AND issuetype = task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Could you tell me which tasks are overdue?",
        "output": "duedate < startOfDay() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Design\" need to identify all sub-tasks in the \"TA\" project that have been completed.",
        "output": "issuetype = Sub-task AND \"Scrum Team\" = \"Design\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The topics that were modified in the past 24 hours were recorded.",
        "output": "updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can I have a peek at all epics.",
        "output": "issuetype = \"Epic\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Would you mind displaying all of the bugs assigned to mkulakar?",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Allow me to see the sagas that are tagged as \"ready for review\".",
        "output": "issuetype = \"Story\" AND \"Review Status\" = \"Ready for Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "In project ABC, a user can display all issues with a given custom field value and reporter.",
        "output": "project = ABC AND cf[10007] = \"Custom Value\" AND reporter = \"john.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Tag all important matters with the \"urgent\" label.",
        "output": "labels = \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Unearth all the bugs.",
        "output": "issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Demonstrate all essential difficulties with the \"urgent\" label.",
        "output": "labels = \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gather together the unresolved queries in the \"ZY\" project.",
        "output": "project = \"ZY\" AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is necessary to collect stories that are tagged as \"Feature\" with a status of \"To Do\".",
        "output": "issuetype = Story AND labels = \"Feature\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Display every story from the TA project that the QA Scrum Team is responsible for, and the resolution of all such stories must be Unresolved.",
        "output": "issuetype = Story AND \"Scrum Team\" = \"QA\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Supply a register of topics that have a specified due date.",
        "output": "duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"product\" team is asked to list all feature requests associated with project XYZ.",
        "output": "project = XYZ AND issuetype = \"feature request\" AND team = \"product\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Furnish a list of issues that have a due date determined.",
        "output": "duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you give me a tally of the open bugs in project ABC?",
        "output": "project = ABC AND issuetype = bug AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I want to behold all epics.",
        "output": "issuetype = \"Epic\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project ABC enables to show all issues with a specific custom field value and reporter.",
        "output": "project = ABC AND cf[10007] = \"Custom Value\" AND reporter = \"john.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project XYZ wants a list of all of the feature requests assigned to the \"product\" team.",
        "output": "project = XYZ AND issuetype = \"feature request\" AND team = \"product\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Do you know of any issues that are linked to the \"customer\" module?",
        "output": "module = \"customer\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Find any problems that have \"urgent\" mentioned in their description.",
        "output": "description ~ \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Understand all the issues that have been talked about along with their comments in the past 24 hours.",
        "output": "commentDate >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I should make sure to write down the tasks that have been given to me and due today.",
        "output": "duedate = startOfDay() AND assignee = currentUser() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Identify all the troubles for a team.",
        "output": "(team = ateam or team = dreamteam or team = engineroom) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Choose any troubles with the \"Frontend\" element and \"Low\" priority.",
        "output": "component = \"Frontend\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "This week, select all matters that remain unresolved.",
        "output": "created >= startOfWeek() AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Design\" should provide a list of all tasks that are currently in the \"In Review\" status.",
        "output": "issuetype = \"Task\" AND \"Scrum Team\" = \"Design\" AND status = \"In Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "\"Done\" is the label given to the stories in the list.",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I am interested in the bugs assigned to mkulakar - could you show them to me?",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please provide me with a list of epics that need to be done by the end of the week.",
        "output": "issuetype = Epic AND duedate <= endOfDay(\"+1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The stories have been categorized as \"done\".",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Testing\" is to acquire all issues with a priority of \"Low\".",
        "output": "\"Scrum Team\" = \"Testing\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to see all the stories related to project XYZ, assigned to john.doe@example.com with priority of \"Medium\".",
        "output": "project = XYZ AND assignee = 'john.doe@example.com' AND issuetype = Story AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can I have an overview of all the issues which have been assigned to the Support Scrum Team, and are labeled as Low priority and In Progress, in Board 16?",
        "output": "board = \"16\" AND \"Scrum Team\" = \"Support\" AND priority = \"Low\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Issues with type \"Bug\" and assignee \"jane.doe\" should be selected.",
        "output": "issuetype = \"Bug\" AND assignee = \"jane.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What epics need to be finished in the upcoming week?",
        "output": "issuetype = Epic AND duedate <= endOfDay(\"+1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please give me a list of all the issues which I have reported or assigned to myself.",
        "output": "reporter = currentUser() OR assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Testing\" has to take care of the issues with the resolution of \"Unresolved\".",
        "output": "\"Scrum Team\" = \"Testing\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Do you have a list of the bugs that have been designated as \"critical\" and assigned to me?",
        "output": "assignee = currentUser() AND issuetype = \"Bug\" AND labels = \"critical\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Give me a list of all sub-tasks under the epic with key \"ACM-123\" that are currently \"in progress\".",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task AND status = \"in progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to know what bugs I am responsible for.",
        "output": "assignee = currentUser() AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe is assigned stories that are to be displayed.",
        "output": "issuetype = \"Story\" AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Choose all the unresolved issues that were reported in the present week.",
        "output": "created >= startOfWeek() AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Labeling stories with \"done\" has been completed.",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to see the tasks that the Scrum Team \"Testing\" must finish in the week ahead.",
        "output": "\"Scrum Team\" = \"Testing\" AND issuetype = Task AND duedate <= 1w"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Provide me a list of the bugs issued to me.",
        "output": "assignee = currentUser() AND issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you kindly list all epics that have been assigned to the Scrum Team \"Frontend\" with a priority of \"High\"?",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Frontend\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Point out all issues listed by \"john.doe\" with the resolution \"Duplicate\".",
        "output": "reporter = \"john.doe\" AND resolution = \"Duplicate\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Demonstrate me jobs that are classified as blocked.",
        "output": "issuetype = Task AND status = Blocked"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Only show bugs with severity \"Critical\" or \"Blocker\".",
        "output": "issuetype = \"Bug\" AND priority in (\"Critical\", \"Blocker\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to have a look at the stories which are in progress.",
        "output": "issuetype = \"Story\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A list of bugs must be supplied with a priority of \"High\".",
        "output": "issuetype = \"Bug\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "List out all the bugs that John Doe has generated.",
        "output": "issuetype = \"Bug\" AND reporter = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Do you have a catalogue of bugs made in the past week?",
        "output": "issuetype = \"Bug\" AND created >= startOfWeek(\"-1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Design\" must provide an overview of all sub-tasks in the \"TA\" project that have been marked as \"Done\".",
        "output": "issuetype = Sub-task AND \"Scrum Team\" = \"Design\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Would you show me the tasks that are due for the Scrum Team \"Testing\" in the upcoming week?",
        "output": "\"Scrum Team\" = \"Testing\" AND issuetype = Task AND duedate <= 1w"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "An inventory of issues related to ACM has been forwarded to mkulakar@cisco.com.",
        "output": "project = \"ACM\" AND issuetype = \"Bug\" AND assignee = \"mkulakar@cisco.com\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A listing of what has been changed over the last day was provided.",
        "output": "updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gather together a list of bugs that have been labeled as critical.",
        "output": "issuetype = Bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Search for issues that have a description with \"urgent\" mentioned.",
        "output": "description ~ \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show all issues with attachments that still require assignment.",
        "output": "attachments is not EMPTY AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Include a compilation of all the issues.",
        "output": "attachments is not empty"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to view all of the bugs that have been assigned to me on board 14 and have a priority of \"Medium\".",
        "output": "project = \"TA\" AND issuetype = \"Bug\" AND board = \"14\" AND assignee = currentUser() AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gather all the issues in the \"AE\" project that have the \"urgent\" tag and are in the \"In Progress\" state.",
        "output": "project = \"ACM\" AND labels = \"urgent\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Expose all bugs assigned to mkulakar.",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Allocate \"urgent\" issues to \"Jane Smith\".",
        "output": "labels = \"urgent\" AND assignee = \"Jane Smith\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you give me a list of assignments that are past due?",
        "output": "duedate < startOfDay() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to be displayed all the bugs in board 12 that are designated to me.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Choose any outstanding issues reported throughout this week.",
        "output": "created >= startOfWeek() AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A list of all open bugs related to project ABC can be generated.",
        "output": "project = ABC AND issuetype = bug AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Under the TA project, present all stories which have been delegated to the QA Scrum Team and have not been resolved.",
        "output": "issuetype = Story AND \"Scrum Team\" = \"QA\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Frontend\" have been assigned epics that have a priority of \"High\", list them.",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Frontend\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Point out responsibilities that are labeled as blocked.",
        "output": "issuetype = Task AND status = Blocked"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "In order to complete the \"Z-587AC\" project, a list of tasks with a due date must be established.",
        "output": "project = \"Z-587AC\" AND issuetype = \"Task\" AND duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to have a list of all the tasks that are assigned to John Doe and those are related to the \"Z-587AC\" project and are due in the next three days.",
        "output": "project = \"Z-587AC\" AND issuetype = Task AND assignee = \"John Doe\" AND duedate <= 3d"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "My task is to view all the stories allotted to me.",
        "output": "issuetype = \"Story\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Make sure to manifest all the resolved dilemmas.",
        "output": "resolution is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Exhibit me objectives which are marked as impeded.",
        "output": "issuetype = Task AND status = Blocked"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to check all the narratives allocated to me.",
        "output": "issuetype = \"Story\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Secure all issues allocated to users in the \"Development\" Scrum Team.",
        "output": "\"Scrum Team\" = \"Development\" AND assignee != null"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Indicate assignments that are denoted as blocked.",
        "output": "issuetype = Task AND status = Blocked"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A list of issues created by John Doe in the last month will be provided.",
        "output": "creator = \"John Doe\" AND created >= -30d"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Develop a collection of bugs that have been flagged as critical.",
        "output": "issuetype = Bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Identify all \"urgent\" issues and give them to the user \"Jane Smith\".",
        "output": "labels = \"urgent\" AND assignee = \"Jane Smith\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to have an overview of the high-priority epics in the \"ACM\" project.",
        "output": "project = \"ZY\" AND issuetype = \"Epic\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The label \"done\" should appear with a list of stories.",
        "output": "issuetype = \"Story\" AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project XYZ is to display the issues with a specific custom field value and priority.",
        "output": "project = XYZ AND cf[10008] = \"Custom Value\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Let me see what bugs are assigned to me.",
        "output": "assignee = currentUser() AND issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is expected to get stories that have the identification of \"Feature\" and a status of \"To Do\".",
        "output": "issuetype = Story AND labels = \"Feature\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe is responsible for creating all the bugs here.",
        "output": "issuetype = \"Bug\" AND reporter = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Compile a list of bugs that has \"High\" priority.",
        "output": "priority = \"High\" AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Look at each uncompleted task in project XYZ.",
        "output": "project = XYZ AND issuetype = task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Obtain all the tasks assigned to John Doe within the \"Z-587AC\" project with a deadline within the next three days.",
        "output": "project = \"Z-587AC\" AND issuetype = Task AND assignee = \"John Doe\" AND duedate <= 3d"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Would you please show me all the stories that are assigned to john.doe@example.com, under project XYZ and that have a priority of \"Medium\"?",
        "output": "project = XYZ AND assignee = 'john.doe@example.com' AND issuetype = Story AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show me stories that are still in development and have an attachment.",
        "output": "issuetype = Story AND status = \"In Progress\" AND attachments is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Support\" calls for a list of epics with a priority level of \"High\".",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Support\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Choose all problems with a definite fix version and status in project ABC.",
        "output": "project = ABC AND fixVersion = \"4.0.0\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Frontend\" are obliged to list down all the sub-tasks of the \"TA\" project that need to be done.",
        "output": "project = \"TA\" AND issuetype = \"Sub-task\" AND \"Scrum Team\" = \"Frontend\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you give me a list of the bugs that have been found in the last week?",
        "output": "issuetype = \"Bug\" AND created >= startOfWeek(\"-1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Let me have a compilation of all the issues that I have either reported or been assigned to.",
        "output": "reporter = currentUser() OR assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Do you have all the open tasks with due dates in the coming 3 days?",
        "output": "issuetype = \"Task\" AND status != \"Closed\" AND duedate <= endOfDay(\"+3d\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "In project ABC, the following allows a user to show all issues with a certain custom field value and reporter.",
        "output": "project = ABC AND cf[10007] = \"Custom Value\" AND reporter = \"john.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Highlight all serious issues with the \"urgent\" label.",
        "output": "labels = \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Choose all difficulties confronting a team.",
        "output": "(team = ateam or team = dreamteam or team = engineroom) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A priority of \"High\" is needed for creating the list of bugs.",
        "output": "priority = \"High\" AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "All the issues that \"john.doe\" reported and have the resolution \"Done\" should be picked.",
        "output": "reporter = \"john.doe\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Display all bugs that have a severity of \"Critical\" or \"Blocker\".",
        "output": "issuetype = \"Bug\" AND priority in (\"Critical\", \"Blocker\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you tell me which bugs are critical in project ABC?",
        "output": "project = ABC AND issuetype = bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Issues with a high priority that I have been assigned need to be viewed.",
        "output": "priority = High AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I must make a list of the tasks that I'm assigned and due today.",
        "output": "duedate = startOfDay() AND assignee = currentUser() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The mission is to acquire stories with the tag \"Feature\" and a status of \"To Do\".",
        "output": "issuetype = Story AND labels = \"Feature\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Find all unsolved problems in the \"ZY\" project.",
        "output": "project = \"ZY\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Get an overview of all pending subjects in the \"ZY\" project.",
        "output": "project = \"ZY\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I am interested in seeing the high-priority epics in the \"ACM\" project.",
        "output": "project = \"ZY\" AND issuetype = \"Epic\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Give John Doe an overview of his active tasks.",
        "output": "assignee = \"John Doe\" AND issuetype = Task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Issues with the resolution \"Done\" reported by \"john.doe\" should be selected.",
        "output": "reporter = \"john.doe\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Could you give me a rundown of all the bugs that have been identified over the last seven days?",
        "output": "issuetype = \"Bug\" AND created >= startOfWeek(\"-1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Display any problem with the specified custom field value \"Custom Value\" and the due date \"2023-11-30\".",
        "output": "cf[10029] = \"Custom Value\" AND due = \"2023-11-30\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to remember to record the tasks due today that have been delegated to me.",
        "output": "duedate = startOfDay() AND assignee = currentUser() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieve all issues given to members in the \"Development\" Scrum Team.",
        "output": "\"Scrum Team\" = \"Development\" AND assignee != null"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Is there a way for me to get a rundown of the bugs tagged as \"critical\" and assigned to me?",
        "output": "assignee = currentUser() AND issuetype = \"Bug\" AND labels = \"critical\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Locate issues that mention \"urgent\" in the explanation.",
        "output": "description ~ \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Make me aware of all the bugs in board 12 that are given to me.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Extract all the assignments allocated to John Doe in board 8 with a priority of \"Low\".",
        "output": "project = \"TA\" AND issuetype = \"Task\" AND board = \"8\" AND assignee = \"John Doe\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present stories which have an attachment as well as are in the \"In Progress\" stage.",
        "output": "issuetype = Story AND status = \"In Progress\" AND attachments is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Collect the list of bugs related to the project \"Z-587AC\" assigned to mkulakar@cisco.com.",
        "output": "project = \"Z-587AC\" AND issuetype = Bug AND assignee = \"mkulakar@cisco.com\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Do you have a list of epics labeled \"Feature\"?",
        "output": "issuetype = \"Epic\" AND labels = \"Feature\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to have a list of all the matters that I have either reported or been assigned to.",
        "output": "reporter = currentUser() OR assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar@cisco.com has been given a catalogue of troubles regarding project ACM.",
        "output": "project = \"ACM\" AND issuetype = \"Bug\" AND assignee = \"mkulakar@cisco.com\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Would it be possible for you to show me all of the bugs assigned to mkulakar?",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to view all bugs that have been assigned to me with a priority of \"Medium\" on the board 14.",
        "output": "project = \"TA\" AND issuetype = \"Bug\" AND board = \"14\" AND assignee = currentUser() AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Fetch me all the assignments in the \"Z-587AC\" project for John Doe and that have to be done in three days.",
        "output": "project = \"Z-587AC\" AND issuetype = Task AND assignee = \"John Doe\" AND duedate <= 3d"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Provide me with the bugs that are assigned to me.",
        "output": "issuetype = Bug AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Put \"Jane Smith\" in charge of all \"urgent\" issues.",
        "output": "labels = \"urgent\" AND assignee = \"Jane Smith\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Include all the bugs belonging to board 12 with the label \"high priority\" that have been updated in the past day.",
        "output": "board = \"12\" AND issuetype = Bug AND priority = \"High\" AND updated >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present me with all epics.",
        "output": "issuetype = \"Epic\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please provide a listing of matters with time-related deadlines.",
        "output": "duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe is in charge of displaying all stories.",
        "output": "issuetype = \"Story\" AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project XYZ requires the collection of all unfulfilled tasks.",
        "output": "project = XYZ AND issuetype = task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Obtain all the responsibilities allocated to John Doe in board 8 with a priority of \"Low\".",
        "output": "project = \"TA\" AND issuetype = \"Task\" AND board = \"8\" AND assignee = \"John Doe\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A list of issues with a resolution of \"Unresolved\" are assigned to the Scrum Team \"Testing\".",
        "output": "\"Scrum Team\" = \"Testing\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Produce a list of all the issues plus their attachments.",
        "output": "attachments is not empty"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "No one has been assigned any tasks yet.",
        "output": "issuetype = \"Task\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I ought to see all the bugs that are allotted to me.",
        "output": "assignee = currentUser() AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "All stories for project XYZ that are assigned to john.doe@example.com with the priority of \"Medium\", show them to me.",
        "output": "project = XYZ AND assignee = 'john.doe@example.com' AND issuetype = Story AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to see the open tasks with due dates in the next 3 days.",
        "output": "issuetype = \"Task\" AND status != \"Closed\" AND duedate <= endOfDay(\"+3d\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Choose the questions that interest you.",
        "output": "(assignee = currentUser() or reporter = currentUser()) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Identify the topics that appeal to you.",
        "output": "(assignee = currentUser() or reporter = currentUser()) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Let me visualize the stories that are marked as \"ready for review\".",
        "output": "issuetype = \"Story\" AND \"Review Status\" = \"Ready for Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is imperative that the Scrum Team \"Support\" possess a list of epics that have a priority of \"High\".",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Support\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I require a description of the stories that have not been completed in the \"ZY\" project.",
        "output": "project = \"ZY\" AND issuetype = Story AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieve the bugs that are allocated to me.",
        "output": "issuetype = Bug AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please show me all bugs assigned to me that have a priority of \"Medium\" on the board 14.",
        "output": "project = \"TA\" AND issuetype = \"Bug\" AND board = \"14\" AND assignee = currentUser() AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gather an assortment of unsolved problems associated with the \"ZY\" project.",
        "output": "project = \"ZY\" AND status != Resolved"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Pick the issues that have caught your curiosity.",
        "output": "(assignee = currentUser() or reporter = currentUser()) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show me all the bugs that John Doe was the creator of.",
        "output": "issuetype = \"Bug\" AND reporter = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "\"High\" should be assigned as the priority of the list of bugs.",
        "output": "issuetype = \"Bug\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can I receive a list of bugs allocated to me and classified as \"critical\"?",
        "output": "assignee = currentUser() AND issuetype = \"Bug\" AND labels = \"critical\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A record of bugs which are being handled by the \"Development\" Scrum Team and are in the \"In Progress\" state should be treated to the viewers.",
        "output": "issuetype = \"Bug\" AND \"Scrum Team\" = \"Development\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Reveal all neglected issues in the \"ZY\" project.",
        "output": "project = \"ZY\" AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What troubles have come up in the \"customer\" module?",
        "output": "module = \"customer\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present all issues that are assigned the custom field value \"Custom Value\" and a due date of \"2023-11-30\".",
        "output": "cf[10029] = \"Custom Value\" AND due = \"2023-11-30\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"product\" team needs to provide a list of feature requests for project XYZ.",
        "output": "project = XYZ AND issuetype = \"feature request\" AND team = \"product\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Check the epics with priority of \"High\" that have been assigned to the Scrum Team \"Frontend\".",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Frontend\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gather up all the tasks assigned to John Doe in board 8 with a priority of \"Low\".",
        "output": "project = \"TA\" AND issuetype = \"Task\" AND board = \"8\" AND assignee = \"John Doe\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Display epics with the \"Feature\" label.",
        "output": "issuetype = \"Epic\" AND labels = \"Feature\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present me with all of the bugs in board 12 that have been given to me.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Display stories with an accompanying attachment which are in the \"In Progress\" state.",
        "output": "issuetype = Story AND status = \"In Progress\" AND attachments is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "List out the sub-tasks under the epic with key \"ACM-123\" that are labeled as \"in progress\".",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task AND status = \"in progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "List the epics that have been assigned to the Scrum Team \"Frontend\" that have a priority of \"High\".",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Frontend\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Security\" have a collection of bugs in board 17 with a priority of \"Medium\" and a status of \"In Progress\".",
        "output": "issuetype = Bug AND board = \"17\" AND \"Scrum Team\" = \"Security\" AND priority = \"Medium\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A priority of \"High\" should be assigned to the list of bugs.",
        "output": "issuetype = \"Bug\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Identify all difficulties with the component \"Frontend\" which have \"Low\" priority.",
        "output": "component = \"Frontend\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Submit a list of all the issues along with their attachments.",
        "output": "attachments is not empty"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Access all the chores given to John Doe in board 8 with a priority of \"Low\".",
        "output": "project = \"TA\" AND issuetype = \"Task\" AND board = \"8\" AND assignee = \"John Doe\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you provide a comprehensive selection of bugs created in the past week?",
        "output": "issuetype = \"Bug\" AND created >= startOfWeek(\"-1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "All bugs with \"Medium\" priority need to be assigned to user \"John Doe\".",
        "output": "priority = \"Medium\" AND issuetype = Bug AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It would be helpful to view all the critical bugs within project ABC.",
        "output": "project = ABC AND issuetype = bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Group together all \"urgent\" issues and make \"Jane Smith\" responsible for them.",
        "output": "labels = \"urgent\" AND assignee = \"Jane Smith\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring out all the bugs.",
        "output": "issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Mark the issues that catch your eye.",
        "output": "(assignee = currentUser() or reporter = currentUser()) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "In the TA project, all stories that have been allocated to QA Scrum Team and are still Unresolved must be displayed.",
        "output": "issuetype = Story AND \"Scrum Team\" = \"QA\" AND resolution = \"Unresolved\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Find all the errands that were delegated to John Doe with a priority of \"Low\" in board 8.",
        "output": "project = \"TA\" AND issuetype = \"Task\" AND board = \"8\" AND assignee = \"John Doe\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "\"Feature\" epics - can you bring them up?",
        "output": "issuetype = \"Epic\" AND labels = \"Feature\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project XYZ has certain labels that are included on user assignments.",
        "output": "project = XYZ AND assignee = \"jane.smith\" AND labels = \"backend-bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project XYZ must present all the issues with a defined custom field value and priority.",
        "output": "project = XYZ AND cf[10008] = \"Custom Value\" AND priority = \"Low\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Filter out all of the bugs marked as \"Critical\" or \"Blocker\".",
        "output": "issuetype = \"Bug\" AND priority in (\"Critical\", \"Blocker\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Focus on those problems that you are keen to explore.",
        "output": "(assignee = currentUser() or reporter = currentUser()) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present all concerns noted by \"john.doe\" that have been labeled as \"Duplicate\".",
        "output": "reporter = \"john.doe\" AND resolution = \"Duplicate\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Viewing all issues with a particular custom field value and reporter in project ABC is enabled.",
        "output": "project = ABC AND cf[10007] = \"Custom Value\" AND reporter = \"john.doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Let me see the stories that are yet to be finished.",
        "output": "issuetype = \"Story\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Do you have any open tasks?",
        "output": "issuetype = \"Task\" AND status != \"Closed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "\"Done\" is the label for the stories included.",
        "output": "issuetype = Story AND labels = \"done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I am looking for the open tasks with due dates in the upcoming 3 days.",
        "output": "issuetype = \"Task\" AND status != \"Closed\" AND duedate <= endOfDay(\"+3d\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Please show me all assignments that the Scrum Team \"Testing\" is required to handle within the next seven days.",
        "output": "\"Scrum Team\" = \"Testing\" AND issuetype = Task AND duedate <= 1w"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Security\" must work on bugs in board 17 having a priority of \"Medium\" and a status of \"In Progress\".",
        "output": "issuetype = Bug AND board = \"17\" AND \"Scrum Team\" = \"Security\" AND priority = \"Medium\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Choose all issues with an exact fix version and status in project ABC.",
        "output": "project = ABC AND fixVersion = \"4.0.0\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Fetch the bugs that are ascribed to me.",
        "output": "issuetype = Bug AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I require an update on all of the bugs on board 14 that have been assigned to me and have a priority of \"Medium\".",
        "output": "project = \"TA\" AND issuetype = \"Bug\" AND board = \"14\" AND assignee = currentUser() AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "To make sure nothing slips through the cracks, the team \"support\" needs to make a list of all their issues associated with the present project.",
        "output": "team = \"support\" AND (fixVersion in unreleasedVersions() OR fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Locate all issues with the custom field value of \"Custom Value\" and due date of \"2023-11-30\".",
        "output": "cf[10029] = \"Custom Value\" AND due = \"2023-11-30\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Send me a list of epics that have to be completed in the upcoming week.",
        "output": "issuetype = Epic AND duedate <= endOfDay(\"+1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "For project XYZ, I need to review the stories assigned to john.doe@example.com and having priority of \"Medium\".",
        "output": "project = XYZ AND assignee = 'john.doe@example.com' AND issuetype = Story AND priority = \"Medium\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you reveal the high-priority epics in the \"ACM\" project?",
        "output": "project = \"ZY\" AND issuetype = \"Epic\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to see all of the bugs which have been assigned to mkulakar.",
        "output": "issuetype = \"Bug\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Find out which epics have been assigned to the Scrum Team \"Frontend\" that have a priority of \"High\".",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Frontend\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is possible to list out the issues that are related to a particular user and have the label from project XYZ.",
        "output": "project = XYZ AND assignee = \"jane.smith\" AND labels = \"backend-bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show me the stores that are denoted as \"ready for review\".",
        "output": "issuetype = \"Story\" AND \"Review Status\" = \"Ready for Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Give me an overview of the stories that are still underway in the \"ZY\" project.",
        "output": "project = \"ZY\" AND issuetype = Story AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to be made aware of any critical bugs associated with project ABC.",
        "output": "project = ABC AND issuetype = bug AND priority = Critical"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Acquire a list of matters in board 12 marked with \"urgent\" and assigned to the Scrum Team \"Development\".",
        "output": "board = \"12\" AND labels = \"urgent\" AND \"Scrum Team\" = \"Development\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring up duties that are identified as blocked.",
        "output": "issuetype = Task AND status = Blocked"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "John Doe is to display all stories he has been allocated.",
        "output": "issuetype = \"Story\" AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Could you please show me the high-priority epics in the \"ACM\" project?",
        "output": "project = \"ZY\" AND issuetype = \"Epic\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "mkulakar@cisco.com has been provided a compilation of glitches linked to project ACM.",
        "output": "project = \"ACM\" AND issuetype = \"Bug\" AND assignee = \"mkulakar@cisco.com\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Project XYZ wants to know all of the feature requests assigned to the \"product\" team.",
        "output": "project = XYZ AND issuetype = \"feature request\" AND team = \"product\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to inspect the stories which are ongoing.",
        "output": "issuetype = \"Story\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "List out all unassigned issues with attachments.",
        "output": "attachments is not EMPTY AND assignee is EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Send me a list of epics to be completed within the next seven days.",
        "output": "issuetype = Epic AND duedate <= endOfDay(\"+1w\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you present me with the bugs that have been labeled \"critical\" and allocated to me?",
        "output": "assignee = currentUser() AND issuetype = \"Bug\" AND labels = \"critical\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Security\" require a list of bugs in board 17 that have a priority of \"Medium\" and a status of \"In Progress\".",
        "output": "issuetype = Bug AND board = \"17\" AND \"Scrum Team\" = \"Security\" AND priority = \"Medium\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring back a selection of quandaries in board 12 tagged as \"urgent\" and appointed to the Scrum Team \"Development\".",
        "output": "board = \"12\" AND labels = \"urgent\" AND \"Scrum Team\" = \"Development\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is mkulakar's responsibility to enumerate all bugs in Board 12.",
        "output": "issuetype = \"Bug\" AND board = \"12\" AND assignee = \"mkulakar\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Choose all the \"Done\" resolved issues that were reported by \"john.doe\".",
        "output": "reporter = \"john.doe\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What jobs have not been completed on time?",
        "output": "duedate < startOfDay() AND issuetype = Task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Choose the topics that pique your interest.",
        "output": "(assignee = currentUser() or reporter = currentUser()) AND (fixVersion in unreleasedVersions() or fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Fetch all the \"AE\" project's matters with \"urgent\" label which are at the same time, in the \"In Progress\" status.",
        "output": "project = \"ACM\" AND labels = \"urgent\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Let me have a look at all epics.",
        "output": "issuetype = \"Epic\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Present me with the bugs allotted to me.",
        "output": "assignee = currentUser() AND issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The resolution \"Done\" has to be applied to all issues reported by the user \"john.doe\".",
        "output": "reporter = \"john.doe\" AND resolution = \"Done\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I'm interested to know about the open tasks.",
        "output": "issuetype = \"Task\" AND status != \"Closed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to be shown all epics.",
        "output": "issuetype = \"Epic\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Provide a list of all bugs that are labeled as \"Critical\" or \"Blocker\".",
        "output": "issuetype = \"Bug\" AND priority in (\"Critical\", \"Blocker\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Choose all pending assignments within project XYZ.",
        "output": "project = XYZ AND issuetype = task AND status != Closed"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Seek out issues that have \"urgent\" contained in the description.",
        "output": "description ~ \"urgent\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I must inspect the high-priority issues that are attributed to me.",
        "output": "priority = High AND assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "In order to ensure clarity, the team \"support\" must create a list of all their issues in the current project.",
        "output": "team = \"support\" AND (fixVersion in unreleasedVersions() OR fixVersion is empty)"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Within the last 24 hours, show any and all issues that have been presented with commentary.",
        "output": "commentDate >= -24h"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"Development\" Scrum Team must list the bugs which are being taken care of and are in the \"In Progress\" status.",
        "output": "issuetype = \"Bug\" AND \"Scrum Team\" = \"Development\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Fetch a collection of dilemmas in board 12 having the label \"urgent\" and that are allotted to the Scrum Team \"Development\".",
        "output": "board = \"12\" AND labels = \"urgent\" AND \"Scrum Team\" = \"Development\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "It is essential to have a parent epic and resolution for any problem registered in Project ABC.",
        "output": "project = ABC AND \"Epic Link\" = \"EPIC-123\" AND resolution = \"Fixed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I want to see all sub-tasks for the epic with key \"ACM-123\" which are \"in progress\".",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task AND status = \"in progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Gather bugs labelled with \"High\" priority.",
        "output": "priority = \"High\" AND issuetype = Bug"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need a list of all the matters that have been assigned to me or reported by me.",
        "output": "reporter = currentUser() OR assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"Z-587AC\" project requires a list of all tasks that have a due date set.",
        "output": "project = \"Z-587AC\" AND issuetype = \"Task\" AND duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The goal is to gather stories with the label \"Feature\" along with a status of \"To Do\".",
        "output": "issuetype = Story AND labels = \"Feature\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Allocate all the bugs.",
        "output": "issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show all bugs classified as either \"Critical\" or \"Blocker\".",
        "output": "issuetype = \"Bug\" AND priority in (\"Critical\", \"Blocker\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "A checklist of tasks with a due date must be created for the \"Z-587AC\" project.",
        "output": "project = \"Z-587AC\" AND issuetype = \"Task\" AND duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I need to view all the issues assigned to the Support Scrum Team in Board 16 that have a priority of Low and a status of In Progress.",
        "output": "board = \"16\" AND \"Scrum Team\" = \"Support\" AND priority = \"Low\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "What are the bugs issued to me?",
        "output": "assignee = currentUser() AND issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Mary Johnson has been assigned the task of retrieving all bugs in board 15 with a priority of \"High\" and a status of \"To Do\".",
        "output": "issuetype = Bug AND board = \"15\" AND assignee = \"Mary Johnson\" AND priority = \"High\" AND status = \"To Do\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Collecting a list of sub-tasks in relation to \"ACM-123\" issue key.",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Support\" should be provided with a list of epics that have a priority level of \"High\".",
        "output": "issuetype = \"Epic\" AND \"Scrum Team\" = \"Support\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The Scrum Team \"Design\" must list all tasks that are currently in the \"In Review\" status.",
        "output": "issuetype = \"Task\" AND \"Scrum Team\" = \"Design\" AND status = \"In Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I would like to be provided a list of all issues assigned to or reported by me.",
        "output": "reporter = currentUser() OR assignee = currentUser()"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Bring forth the narratives that have been labeled as \"ready for review\".",
        "output": "issuetype = \"Story\" AND \"Review Status\" = \"Ready for Review\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Retrieve all the issues from the \"AE\" project that possess the \"urgent\" label and have a \"In Progress\" status.",
        "output": "project = \"ACM\" AND labels = \"urgent\" AND status = \"In Progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Assign to user \"John Doe\" any bug with \"Medium\" priority.",
        "output": "priority = \"Medium\" AND issuetype = Bug AND assignee = \"John Doe\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Spotlight all the bugs.",
        "output": "issuetype = \"Bug\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "The \"Z-587AC\" project requires the making of a list of tasks with a due date.",
        "output": "project = \"Z-587AC\" AND issuetype = \"Task\" AND duedate is not EMPTY"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Can you provide me a list of open tasks?",
        "output": "issuetype = \"Task\" AND status != \"Closed\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Will you demonstrate the high-priority epics in the \"ACM\" project?",
        "output": "project = \"ZY\" AND issuetype = \"Epic\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Include a list of all the issues with their attachments.",
        "output": "attachments is not empty"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "I'd like to know what tasks have been allotted to the Scrum Team \"Testing\" for completion in the next week.",
        "output": "\"Scrum Team\" = \"Testing\" AND issuetype = Task AND duedate <= 1w"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Provide me with all sub-tasks for the epic with key \"ACM-123\" that are marked \"in progress\".",
        "output": "\"Epic Link\" = \"ACM-123\" AND issuetype = Sub-task AND status = \"in progress\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Show all bugs that are labelled as \"Critical\" or \"Blocker\".",
        "output": "issuetype = \"Bug\" AND priority in (\"Critical\", \"Blocker\")"
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Kindly provide me with the high-priority epics in the \"ACM\" project.",
        "output": "project = \"ZY\" AND issuetype = \"Epic\" AND priority = \"High\""
    },
    {
        "instruction": "Write JQL(Jira query Language) for give input",
        "input": "Allow me to see stories that have an attachment and are still in the \"In Progress\" state.",
        "output": "issuetype = Story AND status = \"In Progress\" AND attachments is not EMPTY"
    }
]